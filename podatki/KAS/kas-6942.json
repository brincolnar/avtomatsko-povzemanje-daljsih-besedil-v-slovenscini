{"1": ["1 Uvod", "Kolmanič (2000) je v okviru diplomskega dela izdelal diskretni simulacijski model proizvodnje betonskih cevi z namenom testiranja takratnega obstoječega proizvodnega plana in izvedel finančno analizo poslovanja z zveznim modelom. Diskretni simulacijski model proizvodnje je bil izveden z 2D simulacijskim orodjem ProModel, ki pa več ne zadostuje sodobnim simulacijskim trendom, ki bazirajo na 3D simulaciji in omogočajo nazornejšo, privlačnejšo in kvalitetnejšo vizualizacijo poslovnih procesov. V ta namen želimo v diplomskem delu konvertirati obstoječi simulacijski model iz ProModela v Flexsim, kar bo doprineslo k privlačnejšemu pedagoškemu procesu oz. privlačnejši predstavitvi za potencialne uporabnike, možnosti reinženiringa poslovnih procesov s pomočjo simulacije na sodoben način in z najnovejšimi tehnologijami.\nV prvem delu diplomskega dela smo opisali obe simulacijski orodji, prav tako smo tudi omenili prednosti in slabosti obeh programov. V jedru diplomskega dela je opisan proces proizvodnje betonskih cevi in simulacijski model, ki je bil realiziran v ProModelu in nato še različica, ki smo jo pretvorili v Flexsim. V zadnjem delu so predstavljeni rezultati simulacije obeh simulacijskih orodij. Na koncu je podan zaključek in predlogi za nadaljnje delo.\n"], "2": ["1.1 Predstavitev problema", "V diplomskem delu obravnavamo prenovo simulacijskega modela betonskih cevi. Proizvodnja cevi je bila v celoti modelirana in procesirana s simulacijskim orodjem ProModel, ki je že zastarelo in zanj ni več zagotovljene podpore in posodobitev. Najpomembnejša pomanjkljivost ProModela je neprijazen uporabniški vmesnik, ki ne omogoča kvalitetne predstavitve simulacijskega modela, hkrati pa je sam proces modeliranja dokaj težaven. Naša naloga je bila prenesti simulacijski model v novejše simulacijsko orodje – imenovano Flexsim, ki je do uporabnika bistveno bolj prijazno in omogoča kvalitetnejše predstavitve ter hitrejši razvoj simulacijskih modelov.\n"], "3": ["1.2 Namen in cilji naloge", "Namen predlaganega diplomskega dela je prenova obstoječega simulacijskega modela proizvodnje betonskih cevi v sodobnejšem 3D simulacijskem orodju Flexsim, ki bo zagotavljalo enako funkcionalnost kot obstoječ simulacijski model v ProModelu in zagotovljanje kvalitetnejšega pedagoškega procesa.\nCilji naloge so:\n- analizirati obstoječi simulacijski model v ProModelu,\n- izdelati nazornejši in uporabniku bolj prijazen simulacijski model v Flexsimu  na osnovi obstoječega simulacijskega modela v ProModelu,\n- izvesti verifikacijo in validacijo prenovljenega modela s primerjavo rezultatov  z obstoječim modelom.\n"], "4": ["1.3 Metoda dela", "V diplomski nalogi bomo uporabili sledečo metodologijo:\n- analiza in deskripcija problemskega stanja in preteklega dela,\n- implementacija simulacijskega modela proizvodnje betonskih cevi v orodju  Flexsim s pomočjo metod modeliranja in simulacije,\n- analiza in primerjava simulacijskih rezultatov obeh simulacijskih modelov s  statističnimi metodami.\n"], "5": ["2 Proces proizvodnje betonskih cevi", "Blokovni diagram procesa proizvodnje in prodaje betonskih cevi kot ga obravnava Kolmanič (2000) je prikazan na sliki 1. Proces je sestavljen iz dveh delov:\n- planiranje proizvodnje in servis kupcem,\n"], "6": ["- proizvodnja in skladiščenje izdelkov.", "modela (vir: Kolmanič, 2000)\nV našem diplomskem delu se bomo osredotočili zgolj na del procesa, ki obsega proizvodnjo in skladiščenje betonskih cevi, proces planiranja proizvodnje in servisa kupcem pa bomo izpustili.\n"], "7": ["2.1 Proizvodnja in skladiščenje izdelkov", "Proces proizvodnje in skladiščenja betonskih cevi je prikazan na Sliki 2 in sestoji iz sledečih faz:\n- izdelava košev in opaževanje,\n- izdelava betona,\n- izdelava cevi,\n- razkalupljanje in izbijanje obroča,\n- finalizacija,\n- skladiščenje. \nČasi procesiranja v določenih fazah so odvisni od tipa betonskih cevi, ki so sledeče:\n- ABC300,\n- ABC400,\n- ABC600,\n- ABC800,\n- ABC1000,\n- ABC1200.\nBetonske cevi so različnih dimenzij, kjer je dimenzija cevi ABC300 najmanjša, ABC1200 pa največja. Od tega so odvisni tudi časi procesiranja v določenih fazah proizvodnje, kar bo razvidno v nadaljnjem besedilu.\nTransport med posameznimi fazami proizvodnje cevi poteka s pomočjo viličarjev:\n- Transporter1 – prevoz košev do opaževanja, kjer premeri razdaljo 50 m in  pot nazaj (50 m),\n- Transporter2 – prevoz opaževanih košev do izdelave cevi (35 m), prevoz  izdelanih cevi do sušenja (35 m) in še pot nazaj (60 m),\n- Transporter3 – prevoz izdelanih cevi od razkalupljanja do izbijanja obročev  (25 m), prevoz do cevi do finalizacije (40 m) in pot nazaj (13 m),\n- Transporter4 – prevoz cevi od finalizacije v skladišče (10 m) in pot nazaj (10  m).\nHitrost viličarja znaša 50 m/min oz. 3 km/h, hkrati pa lahko pelje en objekt.\nV nadaljevanju bomo podrobneje opisali posamezne faze. \n2.2.1 Izdelava košev in opaževanje\nDimenzija oklepa je nastavljena na strojih glede na različne vrste tekočih izdelkov. Pravilno oblikovano jeklo se uporablja za dolžino in spiralno obliko oklepa. Proizvodnja armature oziroma oklepa je popolnoma avtomatizirana. Po varjenju oklepa delavec ročno odreže žico in tako se oklep oziroma armatura odpelje do stroja.\nČas izdelave košev je odvisen od tipa cevi, kar je določeno s sledečo tabelo:\nČas opaževanja je enak ne glede na dimenzijo cevi in znaša 1 min.\n2.2.2 Izdelava betona\nV tej fazi se samodejno pripravi konkretne sestavine. Podatki za vrsto in količino betona se vnašajo preko vmesnika. Sestavine, ki so potrebne za beton, se mešajo v mešalniku, medtem pa upravljalec nadzira vse operacije in objekte delovanja. Proizvedeni beton se nato odpelje po tekočem traku do stroja, ki izdela cev.\nČas izdelave betona je odvisen od tipa cevi, kar je določeno s sledečo tabelo:\n2.2.3 Izdelava cevi\nTa faza se odvija na glavnem stroju. Z vibracijo beton preide v kalup, ki tvori obliko cevi. Procesiranje se konča, ko viličar odstrani cev iz stroja. Čas izdelave cevi je odvisen od tipa cevi, kar je določeno s sledečo tabelo:\n2.2.4 Razkalupljanje in izbijanje obroča\nS pomočjo viličarja odpravimo cev, delavec pa ročno izbije obroč. Cev se rotira v horizontalo in spodnji obroč se odstrani. Obroči se nato očistijo in shranijo v skladišče. Viličar cev transportira do končne obdelave. Čas razkalupljanja in izbijanja obročev je odvisen od tipa cevi, kar je določeno s sledečo tabelo:\n2.2.5 Finalizacija\nV tej fazi je cev zapečatena z obeh strani in napolnjena z vodo. Glede na zahteve kupca se meri pritisk in čas. Če so cevi prestale testiranje oziroma so obstale, se testna izkaznica natisne na površini cevi in tako potrjuje kakovost ter omogoča sledljivost proizvoda v primeru zahtevkov. Čas finalizacije je odvisen od tipa cevi, kar je določeno v spodnji tabeli: \n2.2.6 Skladiščenje\nCevi so shranjene glede na njihovo dimenzijo in glede na njihov kakovostni razred. Skladiščenje omogoča hitro dostavo izdelkov manjšim strankam in zagotavlja določeno stopnjo varnosti, v primeru da bi prišlo do kakšne okvare oziroma do spremembe.\n"], "8": ["3 Modeliranje in simulacija", ""], "9": ["3.1 Modeliranje", "Modeliranje je postopek, kjer imamo na eni strani proučevani proces, na drugi pa subjekt, ki proces opazuje. Predstavlja relacijo med simulacijskim sistemom in modelom. Model je poenostavljena in idealizirana podoba, ki zajema le pomembne karakteristike in funkcionalne odvisnosti realnega sistema. Možni odnosi med njimi so naslednji:\n- proces in objekt sta fizično ločena;\n- subjekt lahko vpliva, vrši eksperimente s sistemom;\n- tehnični sistemi, kjer se človek popolnoma distancira od elementov, ki jih  proučuje ter\n- sistemi in procesi, od katerih se subjekt ne more dovolj distancirati, saj je tudi  sam del procesa, ki ga proučuje.\nMed modelom in originalom obstajajo določeni odnosi, in sicer:\n- homomorfnost – model opisuje le bistvene lastnosti originala, torej so  zaključki, ki jih dobimo pri takem modelu, omejeni. Do take poenostavitve  pridemo z združevanjem lastnosti sistema v eno reprezentančno  spremenljivko ali z opuščanjem nepomembnih spremenljivk originala.  Značilna je za kompleksne sisteme.\n- izomorfnost – model in original se istovetno funkcionalno obnašata na relaciji  vhoda-izhoda iz sistema, ne glede na njuno bistvo.\nModel in original lahko ločimo po sledečih stopnjah podobnosti (slika 3):\n- zunanja podobnost,\n- strukturna podobnost in\n- funkcionalna podobnost.\nModeliranje lahko izvajamo po sledečih metodah:\n- metoda analogije,\n- metoda črne škatle (black box),\n- metoda sive škatle (grey box) in\n- metoda prozorne škatle (white box).\nPotek modeliranja v računalniški simulaciji (slika 4):\n- verbalni opis – opredelimo raven in cilj modeliranja, obseg obravnavanega  sistema, interakcije z okoljem; \n- blokovni diagram – določitev spremenljivk, zvez in interakcij med  spremenljivkami in deli obravnavanega sistema. Vse to ponazorimo z  blokovnim diagramom;\n- splošna teorija – analiza problema v splošnem okvirju, ki vzpostavlja zvezo  med konkretnim problemom in konkretnim rešitvami s splošnega vidika;\n- model – matematično detajliranje posameznih delov z ustreznim enačbami  modela primernimi za izbiranje simulacijskega jezika. Vse korake  ponavljamo, dokler ne dobimo zadovoljive rešitve;\n- analiza simulacije.\nmb.si/Studij/OSS/Optimiranje_in_simulacija_sistemov.pdf, 4. 7. 2010!) \nmb.si/Studij/OSS/Optimiranje_in_simulacija_sistemov.pdf, 4. 7. 2010)\n"], "10": ["3.2 Simulacija", "Simulacija sistemov je način reševanja problemov z metodo eksperimentiranja na računalniškem modelu. Njen namen je ugotoviti funkcioniranje celote ali delov sistema pri določenih pogojih in omejitvah. Omejitve predstavlja naše znanje in poznavanje modela − kvalitativno znanje. Poznamo elemente, ne poznamo pa vzrokov in posledic, le-te pa nam pomaga prikazati računalnik. S simulacijo uresničujemo princip »učenje z delom« (»learning by doing«). Da bi sistem bolje spoznali, moramo najprej zgraditi model in večkrat simulirati z različnimi parametri. Računalniška simulacija je elektronski ekvivalent dejanskega sistema. Je interdisciplinarna in široko uporabljena na različnih področjih znotraj poslovnih sistemov. Razdelimo jo na naslednje korake:\n- izgradnja modela,\n- izvajanje modela in\n- analiza rezultatov simulacije. \nV poslovnih sistemih, ki si želijo zagotoviti konkurenčno prednost pred tekmeci, je uporaba simulacije za podporo odločanju naravna in nujno potrebna. Da bi bolje razumeli realni sistem in njegovo celotno kompleksnost, moramo zgraditi model, se s pomočjo simulacije »igrati« z njim ter analizirati rezultate posameznih izvajanj pri različnih parametrih. » Pojem sistem se v splošni teoriji sistemov nanaša na splošni model realnih sistemov« (Kljajić, 1994). Sistem je množica elementov ali enot, ki so v celoti povezane in v splošnem sestoji iz:\n- vhodnih spremenljivk,\n- stanj sistema in\n- izhodov iz sistema.\nVsak element ima določene lasnosti (atribute) in dejavnosti (aktivnosti). Sistem simuliramo z različnimi parametri, preizkušamo razne možnosti in ugotavljamo KAJ BO, ČE BO spremenjen določen parameter. Ali bo to pomagalo k izboljšanju našega sistema? Mu bo morda celo škodilo? Z različnimi vrednostmi parametrov modela lahko poiščemo take vrednosti parametrov, ki najugodneje vplivajo na obnašanje in delovanje sistema.\nNamen simulacije je analiza odzivov nekega sistema v prihodnjem času ali pa povečanje razumevanja obravnavanega sistema. Na ta način si prihranimo stroške eksperimentiranja in se izognemo nevarnostmi.\nSimulacijo uporabljamo, kadar je problem kompleksen in ga ne moremo rešiti z drugimi metodami. V poslovnih okoljih so potrebne preproste in učinkovite rešitve. Simulacijski sistemi ne smejo biti zastavljeni na previsokem računalniškem nivoju. S simulacijami hitro pridobimo zanesljive informacije, zato je njihova uporaba zelo učinkovita.\nV našem primeru bomo prikazali simulacijo v ProModelu, ki jo bomo kasneje pretvorili v novejšo simulacijsko orodje Flexsim.\n"], "11": ["3.3 Dogodkovna simulacija", "Poudarek je na dogodkih, ki vplivajo na sistem. Dogodki lahko:\n- povzročijo spremembo vrednosti neke spremenljivke sistema,\n- sprožijo ali prekinejo sistemsko spremenljivko,\n- aktivirajo ali prekinejo določen proces.\nDiskretne dogodke lahko obravnavamo z dveh vidikov, opisanih v nadaljevanju.\nPri elementarni orientiranosti (particle oriented) predstavljajo izhodišče za simulacijsko analizo elementi sistema. \nPri dogodkovni orientiranosti (ang. event oriented) predstavljajo izhodišče za simulacijsko analizo dogodki, ki nastopajo pri procesu obravnavanega sistema.\nPri simulaciji diskretnih sistemov predstavimo čas z interno simulacijsko uro t = 0. Razmerje med simulacijskim časom in realnim časom je odvisno od narave obravnavanega sistema.\nGeneriranje časov prehodov elementov (transakcij) je odvisno od sistemskih pogojev.\nNačin oblikovanja vrst (queuing disciplines) − osnovni pojmi:\n1. zaporedje prehajanja elementov (transakacij) (arrival patterns), 2. obdelava sistemskih elementov (transakcij) (service process), 3. način oblikovanja vrst (queuing disciplines).\nObdelavo (strežba servis) sistemskih elementov (transakcij) opisujemo s časom obdelave (časom servisa, service time) in s kapaciteto obdelave (kapaciteto strežnega mesta, servisno kapaciteto).\nČas obdelave (čas strežbe, servisa) je čas potreben za obdelavo (čas strežbe, servis) posameznega sistemskega elementa (transakcija, dinamične entitete). Kapaciteta obdelave (kapaciteta strežnega mesta servisa) predstavlja število sistemskih elementov (transakcij), ki jih lahko obdelujemo istočasno.\nPri modeliranju sistema moramo podati verjetnostne porazdelitve časov med prehodi posameznih elementov (transakcij) in časov obdelave (strežbe).\n"], "12": ["4 Obstoječ simulacijski model v ProModelu", ""], "13": ["4.1 Opis simulacijskega orodja ProModel", "Osnovni model procesa proizvodnje betonskih cevi je zasnovan s pomočjo ProModela, ki je simulacijsko orodje, namenjeno za programsko okolje Microsoft Windows. Uporabniku omogoča simuliranje in analiziranje različnih vrst produkcijskih sistemov. Orodje je nezahtevno za uporabo, hkrati pa prilagodljivo za različne potrebe uporabnikov. Uporablja se lahko v veliko različnih produkcijskih situacijah, ki s pomočjo grafičnih predstav poudari realizem simulacijskega modela. Med simulacijo ProModel prikaže animirano ponazoritev sistema in skrbi za statistiko uporabe. Vizualni aspekt izdelave modela in simulacija sta zelo pomembna, saj omogočata lažje komuniciranje z uporabniki med simulacijskim razvojem modela. Poslovodje in strokovnjaki lahko preizkusijo svoje ideje o na novo zasnovanih sistemih in izboljšavah, še preden se odločijo za investicijo.\nV ProModelu je produkcijski sistem predstavljen kot skupek lokacij, skozi katere se pomikajo entitete. Različni produkcijski procesi so vodeni v obliki celot. Simulacijski model lahko vsebuje spremljajoče vire, delavce in opremo za transportiranje. Vizualno modeliranje (VIM) omogoča uporabniku izdelavo modela, čeprav naročilo ni vnaprej določeno, saj ga je vedno mogoče izdelati in nadgraditi. Izdelava simulacijskega modela se izpelje v nekaj fazah. V prvi fazi procesa izdelave modela se določijo osnovni parametri. Delujoč simulacijski model ProModel vsebuje sledeče elemente:\n- lokacije predstavljajo določene prostore v sistemu, kjer so entitete označene  za obdelovanje, čakajo na omenjeni postopek ali pa začrtajo pot. Lokacije se  morajo uporabiti za oblikovanje elementov, kot so delovne postaje, vmesni  pomnilnik ter dovajalni trak;\n- entitete so predmeti, ki jih sistem procesira kot produkte, palete ali celo kot  dokumentacijo in v sistem običajno prispejo po logiki prihoda;\n- omrežja poti so uporabljena za določitev poti, ki jo prepotujejo entitete in  sredstva med lokacijami. Prav tako definirajo gibanje dinamičnih sredstev v  modelu;\n- sredstva so ljudje, oprema in podobni viri, ki lahko prenašajo entitete ter  izvajajo vzdrževanje in operacije;\n- obdelava določa pot entitet skozi sistem ter vrsto procesov, ki se izvajajo za  posamezno entiteto na vsaki lokaciji. Gibanje entitet je omejeno s proizvodno  zmogljivostjo, tako da se nobena entiteta ne bo zmožna pomakniti na  naslednjo lokacijo, dokler na določeni lokaciji ni razpoložljiva potrebna  kapaciteta;\n- prihodi so vnosi entitet v sistem, kjer je kvantiteta vsake entitete definirana  kot prihod na lokacijo.\nDefiniramo lahko tudi ostale elemente produkcijskega procesa, kjer so najbolj uporabljeni sledeči:\n- premiki so časovni intervali, kjer lokacije oziroma sredstva opravijo svoje  naloge; \n - logični elementi omogočajo različne vrste kontroliranja elementov  oblikovanja;\n- makri so pogosto rabljeni izrazi, skupine trditev in funkcij;\n- podprogrami so uporabniško opredeljeni ukazi, ki se uporabljajo za  opravljanje logičnih procesov.\nProces izdelovanja modela se običajno izvaja po naslednjem vrstnem redu: najprej definiramo prostore za produkcijo, potrebne materiale in sredstva za prevoz. Potem s postopkom logičnega modula definiramo tudi produkcijsko logiko, poti med lokacijami, gibanje dinamičnih sredstev in povezavo entitet.\nV vsaki fazi oblikovanja se določijo imena (za lokacije, entitete, poti, ipd.), ustrezni parametri modela pa se vnesejo z intuitivnim grafičnim vmesnikom. Logika modela se poda takoj, ko so elementi določeni. Delovanje modela mora pravilno odsevati pravi učinek sistema. Običajno je mogoče logiko določiti z vnaprej določenimi konstrukti, vendar pa moramo, ko potrebujemo bolj kompleksno logiko, uporabiti makro ukaze ali podprograme, ki so zapisani v programskem jeziku ProModela.\nPrednosti ProModela pred ostalimi simulacijskimi orodji so:\n- s pomočjo ProModela lahko simuliramo praktično vsak delovni proces.  Njegova moč temelji na majhnih grafičnih gradnikih, s katerimi je možno  izdelati tudi izjemno zapleten model;\n- možnost vizualnega interaktivnega modeliranja in animacije modeliranega  sistema sta veliki prednosti v primerjavi s tekstovno orientiranimi vmesniki.  Tako uporabnik mnogo lažje uporablja model, saj v modelu prepozna svoj  proces. Vizualizacija in animacija omogočata enostavno uporabo modela, ki  je pomembna predvsem zato, ker simulacijski model večinoma uporabljajo  ljudje, ki niso strokovnjaki na področju simulacije (managerji, vodilni v  podjetju, vodje proizvodnje ipd.);\n- rezultate je možno prikazati v več oblikah (tekstovni, grafikoni, tabele ipd.) ali  pa poljubne podatke z modelom zapisovati v zunanjo datoteko. Po potrebi jih  dodatno obdelamo s statističnimi in/ali matematičnimi paketi.\nSlabosti ProModela pa so:\n- ProModel ne omogoča odprtih več modelov hkrati. V kolikor želimo prenašati  dele modela iz že razvitih modelov, je le-te potrebno združiti v osnovni model  kot podmodel ali pa izbrati želeno stvar, zapreti model, odpreti nov model in  stvar prilepiti prek odložišča;\n- ne omogoča avtomatskega oblikovanja tabel, tako da je potrebno celotno  tabelo oblikovati ročno;\n- spreminjanje lege posameznih elementov v modelu ali njihovo spreminjanje  je okorno. Vzrok je v sestavljenosti modela (lokacije, poti, resursi ipd.). Če  želimo na primer premakniti določeno lokacijo, je potrebno popraviti še poti,  spremenljivke ipd.;\n- za povezave z zunanjimi viri podatkov (npr. bazami podatkov) je potrebno  izdelati poseben vmesnik.\n"], "14": ["4.2 Simulacijski model", "Procesi, ki sestavljajo model v ProModelu so izdelava košev, opaževanje, izdelava cevi, izdelava betona, razkalupljanje, izbijanje obročev, finalizacija in skladiščenje. Spodaj, pod celotnim potekom procesa, se nahaja tabela, v kateri je označeno, za katero vrsto izdelka se proces odvija. Vidimo tudi stanje naročila, količino izdelanih cevi ter kvaliteto izdelkov, ki so označeni z 1A, 1B in pa 2. Vsako strežno mesto oz. delovno mesto ima tudi števec, ki šteje pogostost izvedbe procesa v določenem času. Števci so vidni v tabeli. Na sliki 5 smo prikazali, kako je proces kreiran v simulacijskem programu ProModel.\n"], "15": ["4.3 Vmesnik", "Ko zaženemo simulacijo, se najprej pokaže vmesnik, kjer izberemo vrsto cevi (slika 6). Nato se prikaže vmesnik, kjer vnesemo število naročil, ki jih moramo za izbrani tip cevi izpolniti (slika 7). Simulacija se nato izvaja tako dolgo, dokler ne izpolnimo vseh naročil.\nOb koncu simulacije si lahko ogledamo rezultate simulacije (slika 8), iz katerih je razvidna zasedenost posameznih delovnih mest. Pri procesu finalizacije je bilo delovno mesto zelo dobro izkoriščeno (75 %). Delovno mesto v procesu izbijanja obročev je bilo izkoriščeno le 20 %. Delovno mesto v procesu izdelave košev je bilo izkoriščeno 30 %, 50 % časa pa je bil proces blokiran. Delovno mesto v procesu izdelave betona je bilo izkoriščeno 50 %, ostalih 50 % je bilo blokirano. Delovno mesto v procesu izdelave cevi je bilo zelo dobro izkoriščeno (92 %), 6 % časa pa je \nbilo v stanju čakanja. Delovno mesto je bilo v procesu opaževanja izkoriščeno 20 %, 28 % časa je bilo v obdobju čakanja, 50 % časa pa je bil proces blokiran.\n"], "16": ["5 Prenova 3D simulacijskega modela z orodjem Flexsim", ""], "17": ["5.1 Opis simulacijskega orodja Flexsim", "Flexsim je programsko orodje namenjeno dogodkovni simulaciji. Dogodkovna simulacija omogoča določanje izkoristka obstoječe tehnologije in ugotovitev ozkih grl, ugotavljanje odvisnosti časa za dobavo izdelkov v funkciji povpraševanja, izdelavo modela za operativno planiranje proizvodnje ter analizo obnašanja sistema v prihodnosti (Kljajić, 1996).\nFlexsim je tudi analitično orodje, s pomočjo katerega lahko na hiter in učinkovit način preverimo učinkovitost obstoječih sistemov, izdelamo izboljšave za njih ali pa na novo izdelamo celoten sistem. Omogoča gradnjo modelov za različna področja, kot na primer logistiko, proizvodnjo in še za mnoga druga področja.\nFlexsim omogoča razvoj 3D modelov, kar je velika prednost, saj lahko proizvodni proces prikažemo v treh dimenzijah oziroma v navidezni resničnosti.\nNajprej bomo razložili nekaj osnovnih izrazov programa ter pojasnili, kako se ti izrazi nanašajo na ključne simulacijske pojme.\n5.1.1 Predmeti Flexsima (Flexsim objects)\nPredmeti v Flexsimu simulirajo različne tipe virov. Primer je predmet Vrsta (Queue), ki ima vlogo skladišča ali neodvisnega območja. Vrsta lahko predstavlja vrsto ljudi, vrsto čakajočih procesov v CPE, območje skladišča v tovarni ali vrsto čakajočih klicev v storitvenem centru za stranke. Naslednji primer enega od predmetov Flexsima je Procesor (Processor), ki simulira zamudo ali čas obdelovanja. Ta Procesor lahko torej predstavlja računalnik v podjetju, blagajnika, ki obdeluje stranko, poštarja, ki razporeja pakete …\nPredmete v Flexsimu najdemo v tako imenovani Knjižnici predmetov (Object LIbrary). Mreža v tej Knjižnici predmetov je urejena po skupinah. Privzeto je, da so v mreži prikazani najbolj uporabljani predmeti.\n5.1.2 Gibljivi predmeti (Flowitems)\nGibljivi predmeti so tisti, ki se v modelu premikajo. Predstavljajo lahko sestavne dele, palete, zbirke, dokumente, zaboje, ljudi, telefonske klice, naročila ali vse, kar se v procesu simulacije premika. Nad njimi se izvajajo razni procesi, lahko pa jih prenašamo po modelu. Izvaja se lahko proces z gibljivimi izdelki ali pa so izdelki uporabljeni v obliki materiala pri uporabi virov. V Flexsimu ti gibljivi izdelki nastanejo v Izvoru (Source Object). Ko enkrat Gibljivi predmeti prečkajo model, so poslani v Ponor (Sink Object), kjer poniknejo. \n5.1.3 Tip izdelka (Itemtype)\nTip izdelka (Itemtype) je oznaka, ki jo postavimo na gibljiv predmet. Tip izdelka nam predstavlja črtno kodo, tip produkta ali številko sestavnega dela. Flexsim je urejen tako, da se sklicuje na Tip izdelka.\n5.1.4 Vpogled v model (Model views)\nFlexsim deluje v 3-dimenzionalnem okolju. Za izgradnjo modela smo privzeli pogled iz ptičje perspektive (tloris). Prav tako lahko v model vpogledamo na bolj realističen način. Običajno je veliko lažje graditi model z uporabo pogleda tloris, medtem ko je 3-dimenzionalni pogled boljši za predstavitve. Vendar pa lahko za gradnjo modela ali med samim potekom uporabimo katero koli možnost. V Flexsimu lahko odpremo neomejeno število vidnih oken, vendar si je treba zapomniti, da ko je odprtih oken več, se poveča tudi potreba po računalniških virih.\n"], "18": ["5.2 Gradnja modela", "Model gradimo po principu petih osnovnih korakov: ustvarjanje delovnega okolja, vzpostavitev povezav definiranja izgleda in lastnosti objektov, prevajanje in zagon modela ter pregled rezultatov.\nUstvarjanje delovnega okolja\nZa začetek moramo postaviti ustrezne objekte − v Flexsimu so to resursi (stroji, operaterji, transporterji) ter ostali elementi, ki omogočajo gradnjo in delovanje modela. Ko so objekti izbrani, jih moramo postaviti v delovno okolje, in sicer tako da jih primemo in z levo tipko miške prenesemo v delovno okolje.\nVzpostavitev povezave\nPo postavitvi vseh objektov, ki so postavljeni v realnem zaporedju procesa, ki se trenutno izvaja, moramo objekte med seboj povezati. Objekte med sabo povežemo tako, da držimo črko A, z miško pa potegnemo od enega objekta do drugega za stalne objekte. Če sledi povezava iz stalnega objekta do potujočega (npr. viličar,\npovezavo med potujočimi objekti, držimo črko W in potegnemo z miško od enega do drugega objekta. \nDefiniranje izgleda in lastnosti objektov\nZ dvoklikom na posamezni objekt se odpre podrobno okno objekta. V oknu se odprejo možnosti za določanje lastnosti določenih objektov. Od vrste uporabljenih objektov je odvisno, katero lastnost mu določimo. V splošnem jim določamo kapacitete in čas, v katerem se proizvodi proizvajajo oziroma gibljejo čez določen objekt.\n"], "19": ["5.3 Simulacijski model", "Simulacijski model, ki smo ga iz ProModela pretvorili v Flexsim, prikazuje slika 9. Dodali smo števec, ki šteje izdelavo cevi ter dodatni števec, ki nam pove, koliko cevi je v skladišču.\n"], "20": ["5.4 Vmesnik v Flexsimu", "Vmesnik za vnos vhodnih podatkov je prikazan na sliki 10. Za razliko od modela v ProModelu smo tukaj vnos vhodnih podatkov združili v en sam vmesnik, pri katerem uporabnik izbere tip cevi in vnese število naročil, ki jih je potrebno realizirati.\nZa izbiro tipa cevi je uporabljena opcijska izbira Radio Button. Vsaka opcija vsebuje programsko kodo, ki postavi vrednost spremenljivke itemcurrent izbrane opcije na 1, za vse ostale opcije pa na vrednost 0. Primer kode za izbiro tipa cevi ABC300: \n setnodenum(node(\"MAIN:/project/model/Tools/GUIs/GUI 1/Tip  Cevi/ABC300>itemcurrent\"),1);  setnodenum(node(\"MAIN:/project/model/Tools/GUIs/GUI 1/Tip  Cevi/ABC400>itemcurrent\"),0);  setnodenum(node(\"MAIN:/project/model/Tools/GUIs/GUI 1/Tip  Cevi/ABC600>itemcurrent\"),0);  setnodenum(node(\"MAIN:/project/model/Tools/GUIs/GUI 1/Tip  Cevi/ABC800>itemcurrent\"),0);  setnodenum(node(\"MAIN:/project/model/Tools/GUIs/GUI 1/Tip  Cevi/ABC1000>itemcurrent\"),0);  setnodenum(node(\"MAIN:/project/model/Tools/GUIs/GUI 1/Tip  Cevi/ABC1200>itemcurrent\"),0);\nVmesnik ima prav tako tri gumbe: Run, Stop in Reset. Gumb Run požene simulacijo, gumb Stop jo ustavi, gumb Reset pa resetira simulacijski model. Za vsakim izmed gumbov stoji programska koda, ki krmili simulacijski model. Za gumba Run in Stop si jo lahko ogledate v Prilogi 1, gumb Reset pa ima sledečo kodo, ki resetiral simulacijski model:  resetmodel(1);\nNa vmesniku imamo možnost napisati oziroma omejiti število naročil, ki jih je potrebno izvesti tekom simulacije. Simulacija bo trajala tako dolgo, dokler ne bo v skladišču naloženih toliko izdelkov, kot smo jih določili v polju število naročil.\nVmesniku smo dodali tudi dva zavihka z imenom »Statistika modela« in »Statistika objekta«. Na sliki 11 je pod zavihkom »Statistika modela« razvidno, kako se skladišče skozi čas polni z izdelanimi cevmi.\nPod zavihkom »Statistika objektov« pa lahko vidimo grafe zasedenosti vseh delovnih mest. Le-ti nam prikažejo, koliko časa je procesor deloval, koliko časa je miroval, koliko časa je bil procesor blokiran in koliko časa je procesor čakal na prevoz izdelka. Na slikah bomo predstavili rezultate za vsa delovna mesta tipa cevi ABC 300:\n- opaževanje,\n- izdelava betona,\n- izdelava cevi,\n- sušenje,\n- razkalupljanje,\n- finalizacija. \n"], "21": ["5.5 Tabela časov", "V Flexsimu smo ustvarili globalno tabelo TabelaCasov, iz katere razberemo čase procesiranja glede na tip cevi (slika 10). Tabelo časov smo ustvarili na podlagi časov podanih v poglavju 2. 1.\nPodatke iz zgornje tabele uporabljajo sledeča strežna oz. delovna mesta:\n- izdelava košev,\n- opaževanje,\n- izdelava betona ,\n- sušenje,\n- izbijanje obročev,\n- finalizacija.\nPrimer uporabe globalne tabele TabelaCasov je prikazan na sliki 18, kjer določimo čas procesiranja za delovno mesto Izdelava košev. V padajočem meniju Process>Time izberemo opcijo By Global Table Lookup in vpišemo vrednosti. Za ostala delovna mesta moramo spremeniti vrednost Column, da bomo razbrali pravilno vrednost časa procesiranja. \n"], "22": ["5.6 Ostali gradniki modela", "5.6.1 Vir materiala za koše\nSprva smo kreirali objekt, ki se nahaja v knjižnici pod imenom Sink in ga imenovali »Viri materiala za koše«, predstavlja pa vir za izdelavo košev.\nNastavitve, ki smo jih nastavili, so prikazane na sliki 20. \nV nastavitvah za vir materiala za koše smo pod polje »FlowItem Class« nastavili obliko koša, ki je bila grafično oblikovana v programu Solidworks.\n5.6.2 Izdelava košev\nMaterial prihaja v proces izdelave košev, kjer se koši izdelajo. Vendar pa smo pri procesu izdelave košev uredili proces tako, da izdela koše v določenem času ter bere čas iz tabele, ki jo vidimo v tabeli 6, pod stolpcem IAkosevCasi. Na sliki 22 je prikazan objekt ustvarjen v Flexsimu.\nNastavitve procesiranja pri izdelavi košev smo videli na sliki 18.\n5.6.3 Transporter\nVsak transporter je imel nastavljene nastavitve, kot je prikazano na spodnji sliki:\nTransporter smo uporabljali za prevoz materiala med posameznimi delovnimi mesti. Nastavitve, kjer je transporter prevzel material, so pri vsakem delovnem mestu enake. \n5.6.4 Tekoči trak\nTekoče trakove smo uporabili za prenos materiala do delovnih mest. Hitrost tekočega traku od izdelave košev do opaževanja je 200 m/min, od opaževanja do izdelave cevi 50 m/min in od izdelave betona do izdelave cevi 200 m/min.\n5.6.5 Opaževanje\nNaslednji objekt, ki smo ga vstavili v model, je Opaževanje.\nNastavljene vrednosti pri opaževanju smo nastavili, kot je razvidno iz spodnje slike:\n5.6.6 Vir betona\nSledeči objekt, ki smo ga kreirali, je bil Vir Betona. Nastavitve, ki smo jih uporabili pri tem objektu, so razvidne iz slike 31.\nV spodaj prikazanih nastavitvah smo pod polje »FlowItem Class« nastavili beton, ki je bil kreiran v Solidworksu, v datotečnem formatu wrl.\n5.6.7 Izdelava betona\nVhodni material se je v procesu izdelave betona pretvoril v beton. Nastavitve delovnega mesta »Izdelava betona« so vidne na sliki 33.\n5.6.8 Izdelava cevi\nV objekt Izdelava cevi sta prišla beton in opaževani koši, ki sta se nato združila v izdelano cev. Nastavitve časa procesiranja so vidne na sliki 35.\n5.6.9 Sušenje\nPo končanem procesu izdelave cevi se cevi prenesejo v proces sušenja. Nastavitve objekta »Sušenje« so razvidne iz slike 37.\n5.6.10 Razkalupljanje\nPotem ko se cevi sušijo, se po tekočem traku prenesejo do razkalupljanja. Na tem mestu se sname kalup in cev se posreduje naprej na izbijanje obročev, kalupi pa zapustijo sistem preko ponora. Ta objekt nima posebnih nastavitev in lahko uporabimo privzete nastavitve.\n5.6.11 Izbijanje obročev\nNaslednji objekt je Izbijanje obročev. Nastavitve tega objekta so vidne na sliki 40.\n5.6.12 Finalizacija\nV procesu »Finalizacije« cev dodatno oblikujejo in jo pripravijo za skladiščenje. Objekt Finalizacija ima nastavitve, kot jih kaže slika 42.\n5.6.13 Skladiščenje\nZadnja faza naše celotne simulacije je skladiščenje. Končani izdelki se transportirajo v skladišče. Na sliki 43 je prikazan objekt Skladišče, ki je regalno skladišče.\nObjekt skladiščenja ima v ozadju pisano programsko kodo:\ntreenode item = parnode(1);  treenode current = ownerobject(c);  int port = parval(2);\nstring stevNarocil =  getnodestr(node(\"MAIN:/project/model/Tools/GlobalVariables/variable1/  Data\"));  int stNarocil = stringtonum(stevNarocil);\nif(content(current) == stNarocil) \nS to programsko kodo preverjamo, koliko cevi je že v skladišču. Če je število cevi v skladišču enako željenemu številu naročil, ki smo ga določili v vmesniku, se simulacija ustavi in lahko pogledamo, koliko časa smo porabili za izdelavo.\n"], "23": ["5.7 REZULTATI SIMULACIJE", "Na sliki 44 vidimo, da je bila v procesu opaževanja zasedenost delovnega mesta 21,7 %, v obdobju nedelovanja je bilo delovno mesto 34 % časa, v obdobju čakanja 31,6 % in v stanju blokade 12,7 %. Zasedenost delovnega mesta v procesu izdelave cevi je bila 82,6 %, v obdobju nedelovanja je bilo delovno mesto 1,2 % časa, proces pa je bil tudi v obdobju čakanja 16,1 %. Zasedenost delovnega mesta v procesu izdelave betona je 53,6 %, v obdobju nedelovanja je bilo 0,2 % in v stanju blokade 46,2 % časa. Zasedenost delovnega mesta v procesu izdelave košev je bila 35,8 %, v stanju nedelovanja 0,2 %, v stanju blokade 27,5 % in v stanju čakanja 36 % časa. Zasedenost delovnega mesta v procesu izbijanja obročev je bila 17,2 %, v stanju nedelovanja 76,2 % in v stanju čakanja 16,1 % časa. Zasedenost delovnega mesta v procesu finalizacije je 66,8 %, v stanju nedelovanja je 28,6 % in v času čakanja 4,6 % časa.\n"], "24": ["6. Analiza in primerjava simulacijskih rezultatov", "Analiza dane naloge je prikazala, da se rezultati med simulacijo v ProModelu in v Flexsimu ne razlikujejo preveč, saj je bila to le pretvorba oziroma prevajanje modela iz enega orodja v drugo.\nV tabeli 8 vidimo primerjavo simulacijskih rezultatov glede na število izdelanih cevi v času osmih ur. Vidimo, da imajo različne vrste cevi podobne rezultate. Do največjih razlik prihaja pri ceveh ABC300 (16 %) in ABC 1200 (23 %), pri ostalih tipih cevi pa ni opaznejših odstopanj. Ugotovili smo, da je do razlike v rezultatih prišlo zato, ker zaradi pomanjkanja specifikacij in programske dokumentacije nismo mogli v popolnosti rekonstruirati programske kode iz ProModela, ki v ozadju skrbi za dodatno krmiljenje modela.\n"], "25": ["7. Zaključek", "V diplomskem delu smo obravnavali prenovo simulacijskega modela proizvodnje betonskih cevi, ki je bil prvotno realiziran z 2D simulacijskim orodjem ProModel. Obstoječi simulacijski model smo zaradi zastarelosti orodja ProModel prenesli v sodobnejše orodje za 3D simulacijo – Flexsim, z namenom izboljšave pedagoškega procesa ter nazornejše predstavitve simulacije in simulacijskih rezultatov.\nIzboljšali smo uporabniški vmesnik, ki krmili simulacijski model. Le-ta je sedaj uporabniku bolj prijazen, saj je učinkovitejši in preglednejši. V uporabniškem vmesniku je zajeta kontrola modela, ki omogoča izbiro tipa cevi, določanje števila izdelkov, ki jih moramo narediti ter kontrole za zagon simulacije. Uporabniški vmesnik prav tako omogoča interaktivni statistični vpogled v dogajanje v modelu tekom simulacije, kar v ProModelu ni mogoče.\nPri pretvorbi smo naleteli na pomanjkanje speficikacij in dokumentacije simulacijskega modela v ProModelu. Zato je bilo izjemno težko rekonstruirati programsko kodo, ki skrbi za dodatno krmiljenje v ProModelu. Posledica tega so določene razlike v končnih rezultatih, če primerjamo število izdelanih cevi v osmih urah simulacije med ProModelom in Flexsimom.\nVendar pa te razlike v rezultatih niso tako pomembne, saj smo s prenovo simulacijskega modela želeli doseči predvsem atraktivnejšo predstavitev tehnološkega procesa, kar smo s simulacijo v 3D okolju in z uporabniško prijaznim vmesnikom tudi dosegli.\n"], "abstract": ["V diplomskem delu obravnavamo prenovo simulacijskega modela proizvodnje betonskih cevi, ki je bil realiziran z 2D simulacijskim orodjem ProModel. ProModel je zastarelo simulacijsko orodje, ki ima določene pomanjkljivosti kot npr. neprijazen uporabniški vmesnik, težavno povezljivost z zunanjimi viri podatkov ipd. Obstoječ simulacijski model smo zaradi omenjenih slabosti prenesli v sodobnejše orodje za 3D simulacijo – Flexsim, z namenom izboljšave pedagoškega procesa ter nazornejše predstavitve simulacije in simulacijskih rezultatov. Velika prednost Flexsima je, da omogoča razvoj 3D modelov, saj lahko proizvodni oziroma kateri koli drugi proces prikažemo v treh dimenzijah oziroma v navidezni resničnosti, kar da še dodatno težo učinkoviti predstavitvi procesa, ki smo ga želeli modelirati. V diplomskem najprej predstavimo proces izdelave betonskih cevi. Temu sledi predstavitev metodologije modeliranja in simulacije. V naslednjem poglavju obravnavamo obstoječi model v ProModelu in nato razvoj modela v Flexsimu. Sledi analiza simulacijskih rezultatov obeh modelov, na koncu pa je podan zaključek."]}