{"1": ["1 UVOD", ""], "2": ["1.1 PREDSTAVITEV PROBLEMA", "V diplomski nalogi bomo obravnavali problem vodenja evidenc vseh objektov na posameznem vodovodnem sistemu in opreme, ki se nahaja v teh objektih. Dandanes ni pomembno samo to, da imamo določene podatke shranjene na različnih lokalnih računalnikih, temveč tudi to, da jih pridobimo v čim krajšem času in sicer takrat, ko jih potrebujemo, ter da imajo do njih dostop vsi zainteresirani uporabniki. Pri tem je pomembno, da so podatki zbrani v eni skupni bazi, s čimer je omogočeno njihovo poljubno povezovanje in pregledovanje. Uporabnikom morajo biti torej pri njihovem delu na voljo pravilne in točne informacije.\nPri upravljanju vodovodnih sistemov skrbimo za nemoteno oskrbo prebivalcev z zadostnimi količinami pitne vode, ki mora biti ustrezne kvalitete. V ta namen imamo v objektih za zajem, zbiranje in distribucijo pitne vode nameščene ustrezne naprave, inštrumente in merilnike. S pomočjo le-teh črpamo vodo iz vodonosnika in/ali v višje ležeča naselja, spremljamo količino načrpane in distribuirane vode, merimo nivo vode v objektih ter motnost vode,… Stanje na vodovodnem sistemu spremljamo preko daljinskega nadzora, da lahko pravočasno ukrepamo. Tako uporabniki pitne vode včasih sploh ne zaznajo morebitnih motenj.\nVsi podatki o merilnih inštrumentih (merilci motnosti, merilci prostega klora, merilci pretokov, nivojske sonde) in ostalih napravah (naprave za razkuževanje vode, črpalke) so sedaj shranjeni v različnih računalnikih kot samostojni dokumenti. To pomeni, da imajo dostop do podatkov le lastniki dokumentov, kar predstavlja dodaten problem ob morebitni njihovi daljši odsotnosti.\nNa aparaturah se opravljajo redni in izredni posegi oz. vzdrževanja. Med redne posege uvrščamo sprotna vzdrževanja in predpisana servisna dela, ki so časovno opredeljena s strani pooblaščenega serviserja. Izredni posegi pa so posegi ob okvarah. V primeru izvedenega servisa pooblaščeni serviser napiše gradbeni dnevnik, ki ga podpiše tudi prisotni delavec iz podjetja. Ta dokument je nadalje osnova za potrjevanje prispelega računa, kateremu se priloži tudi gradbeni dnevnik. Vsi ti dokumenti se pošljejo v gospodarsko računovodski oddelek, kjer se tudi arhivirajo.\nIz opisanega problema je razvidno, da se zgoraj omenjeni podatki nahajajo le v papirni obliki.\nNamen te naloge je zagotoviti, da se bodo vsi podatki nahajali tudi v računalniški obliki, vsi na enem mestu. To pomeni, da bomo zgradili bazo podatkov, ki se bo nahajala na strežniku. Sam dostop do podatkov bo preprost, saj bomo zgradili primeren uporabniški vmesnik. Podatki se bodo vnašali preko izdelanih obrazcev, vnaprej pa bodo izdelane predloge za poročila.\n"], "3": ["1.2 PREDSTAVITEV OKOLJA", "Diplomsko nalogo bom izdelal za podjetje Komunala Kranj, javno podjetje, d.o.o. (v nadaljevanju Komunala Kranj), kjer sem tudi zaposlen. Skozi leta so se komunalne dejavnosti izvajale v različnih organizacijskih oblikah, današnjo organizacijsko obliko pa je podjetje dobilo leta 2000, ko se je zaradi prilagoditve Zakona o gospodarskih javnih službah preoblikovalo v javno podjetje, s statusom družbe z omejeno odgovornostjo. Podjetje s 188 zaposlenimi izvaja komunalne dejavnosti.\nPrototipno rešitev bomo izdelali za poslovno enoto Vodovod, ki pokriva področje oskrbe s pitno vodo. Oskrba s pitno vodo obsega predvsem upravljanje z vodovodnim omrežjem, objekti in napravami, redno in investicijsko vzdrževanje, izvajanje potrebnih rekonstrukcij, novogradenj in tehnoloških izboljšav ter zagotavljanje zdravstveno ustrezne pitne vode.\nDEJAVNOSTI PODJETJA Podjetje izvaja širok spekter komunalnih dejavnosti:   oskrba s pitno vodo,   odvajanje in čiščenje komunalnih odpadnih in padavinskih voda,   ravnanje s komunalnimi odpadki,   vzdrževanje komunalnih naprav,   javna snaga in čiščenje javnih površin,   urejanje javnih poti, površin za pešce in zelenih površin,   vzdrževanje lokalnih cest,   urejanje pokopališč ter pokopališka in pogrebna dejavnost,   upravljanje tržnice,   krasitev mest in naselij.\nORGANIZIRANOST PODJETJA Notranja organizacija in poslovanje podjetja poteka na naslednji način:\nVodstvo družbe z informatiko in stiki z javnostjo ter tajništvo;\nUprava družbe:\n- gospodarsko računovodska služba,\n- kadrovska, pravna in splošna služba,\nPoslovne enote:\n- Komunala,\n- Vodovod,\n- Kanalizacija in čistilne naprave. \n"], "4": ["1.3 METODE DELA", "Za metodo dela smo izbrali metodo prototipnega pristopa, ki je za obravnavani primer najbolj primerna. To utemeljujemo s tem, da sami najbolje poznamo problem in težave, s katerim se srečujemo pri vsakokratnem shranjevanju, iskanju in obdelavi podatkov.\nPrototipni pristop se je uveljavil v začetku 80-tih let, ko so se razširila zmogljiva programska orodja. Osnovna ideja prototipnega razvoja je v tem, da uporabnik lažje oceni, ali delujoča aplikacija ustreza njegovim zahtevam, ker v naprej opredeli zahteve. S to metodo so se izboljšale nekatere slabosti tradicionalnega pristopa (življenjski cikel razvoja aplikacije). S prototipom (poenostavljeno verzijo končne aplikacije ali dela le-te) lahko uporabnik eksperimentira, jo oceni, razvijalec jo lahko (večkrat) dopolni, dokler dovolj dobro ne ustreza zahtevam uporabnika. Pri izdelavi prototipa se razvijalec odloči ali bo prototip zavrgel (uporabil ga je za to, da je lahko bolj natančno opredelil zahteve uporabnikov) ali ga bo izpopolnjeval do končne \naplikacije (razvojni prototip). Od tega je odvisen tudi napor in čas razvijalca, ki ga vloži v razvoj prototipa.\nKot navaja vir [3] ima prototipni pristop svoje prednosti kot tudi probleme. Prednosti so sledeče:\n- pomaga razjasniti zahteve uporabnikov, preden vložimo veliko časa in napora  v razvoj aplikacije,\n- pomaga preveriti ustreznost zasnove aplikacije,\n- pomaga motivirati uporabnike za sodelovanje pri razvoju in premagati odpore  do aplikacije (računalnika),\n- na enostaven način lahko razvijemo (običajno) del končne aplikacije. Problemi pa so:\n- sistemska analiza se lahko obrne v napačno smer (k manj bistvenim  zahtevam),\n- uporabnik včasih noče opustiti prototipa, kar zavira razvoj končne aplikacije,\n- prototipni pristop je lahko zelo zahteven za razvijalce (programerje),\n- včasih se je težko odločiti, kdaj je prototip zaključen.\nPri izdelavi prototipa so se zahteve naročnika oblikovale z večkratnimi pogovori z vodjo kontrole vodovodnih sistemov v Komunali Kranj, ki do sedaj vodi večino vseh potrebnih evidenc.\n"], "5": ["2 OBSTOJEČE STANJE", ""], "6": ["2.1 POSNETEK STANJA", "Vsi do sedaj zbrani podatki se nahajajo v dokumentih, ki so narejeni s pomočjo programov Microsoft Word in Excel. V teh dokumentih niso vključeni vsi podatki s katerimi razpolagamo, saj se zavedamo, da na tak način ne moremo voditi vseh podatkov. Predvsem je zamudno iskanje podatkov. Prav tako bi težko obvladali sledenje zgodovine, kljub vgrajenim naprednim filtrom za razvrščanje podatkov.\nZaradi teh težav je bila že pred leti zgrajena relacijska podatkovna baza s programom Microsoft Access. Le-ta zaradi pomanjkanja časa ni bila strukturirana ter nikoli dokončno zgrajena in vpeljana.\nDosedanji podatki so služili le podjetju, zato tudi ni bilo dovolj interesa po shranjevanju podatkov v drugačni obliki. Število podatkov se nenehno povečuje, saj iz leta v leto upravljamo z večjim številom vodovodnih sistemov. S tem se nam povečuje število objektov in vgrajene opreme v njih. Poleg tega je z uveljavitvijo Pravilnika o oskrbi s pitno vodo prišlo do zahteve po podrobnejšem poročanju podatkov Ministrstvu za okolje in prostor v predpisani obliki.\n"], "7": ["2.2 KRITIČNA ANALIZA", "Trenutno se v podjetju podatki o objektih in opremi nahajajo v različnih dokumentih, ki medsebojno niso povezani. Ti dokumenti so shranjeni na lokalnih računalnikih, zato je dostop do teh podatkov mogoč le avtorjem dokumenta. Velika pomanjkljivost take rešitve je tudi v tem, da ne omogoča izdelovanja poizvedb ter raznih poročil.\nTežava je tudi v tem, da ni mogoče obstoječih podatkov povezati s kakšno drugo podatkovno bazo, kot na primer s podatkovno bazo daljinskega nadzora, v kateri so shranjeni podatki iz merilne opreme.\nVse te pomanjkljivosti smo upoštevali pri izdelavi prototipne rešitve za vodenje evidenc objektov in opreme na vodovodnem sistemu.\n"], "8": ["2.3 PREDLOG KONČNEGA STANJA", "Do sedaj se podatki o objektih in opremi niso redno in sistematično zbirali, temveč so se le-ti preverjali oz. pridobivali takrat, ko smo jih potrebovali. Z izgradnjo prototipne rešitve bomo prilagodili tudi proces zbiranja podatkov, da bodo le-ti stalno posodobljeni. \nPri obnovi objektov ter vgradnji, popravilu ali zamenjavi opreme je vsakokrat prisoten nadzornik omrežja. Ker imajo nadzorniki omrežja vse podatke o dogodkih na vodovodnem sistemu, bodo te podatke vnašali v računalniški program. Obstaja tudi druga možnost, da nadzorniki omrežja vse podatke posredujejo vodji kontrole vodovodnih sistemov in jih le-ta vnese v računalniški program. Z vnašanjem podatkov bomo zagotovili ažurnost podatkov, ki jih bo mogoče prikazovati na različne načine. Z novim načinom vodenja evidenc objektov in opreme je potrebno spremeniti tudi proces zbiranja podatkov, ki je prikazan na sliki 2.\nŽe na začetku izdelave prototipa smo se odločili, da bosta podatkovna baza in uporabniški vmesnik ločena, se pravi v dveh različnih datotekah. Samo razdelitev lahko v Access-u naredimo tudi naknadno s pomočjo čarovnika (meni orodja / orodja za zbirko podatkov / razdeljevalec zbirk podatkov). \nizvajalec\n"], "9": ["3 IZDELAVA PROTOTIPNE REŠITVE", ""], "10": ["3.1 PROGRAMSKA ORODJA", "Za izdelavo programske rešitve smo izbrali programsko orodje Microsoft Access 2003 - slovenska različica (v nadaljevanju Access). Pri izdelavi prototipne rešitve nam je Access služil kot orodje za izgradnjo relacijske podatkovne baze. Poleg tega smo s pomočjo Accessa izdelali obrazce, ki nam služijo za lažje vnašanje podatkov. Prav tako smo z Accessom izdelali poizvedbe in poročila. Uporabnost in zmožnost Accessa pa povečajo vgrajeni makri in moduli. Za ustvarjanje lastne ikone pa smo uporabili računalniški program Axialis IconWorkshop Tryout Version 6.3.3.0, ki je dostopen na spletni strani http://www.axialis.com. Program je možno 30 dni brezplačno preizkušati.\nMakri samodejno sprožijo izvajanje enega ali več dejanj za izvajanje nalog. V zbirki podatkov so lahko prikazani kot ukazni gumbi na obrazcih.\nModuli so programi, ki so napisani v programskem jeziku Microsoft Visual Basic for Application (VBA); le-ta je na prvi pogled podoben Visual Basicu.\nAccessov sistem za upravljanje z bazo podatkov je primeren za manjše oz. srednje velike podatkovne baze, saj ima kar nekaj omejitev kot so: velikost datoteke, število predmetov v zbirki podatkov, število modulov,…\nRazlog za izbiro izbranega Access-ovega orodja je naša ocena, da ne bomo presegli nobene izmed omejitev, ki jih ima omenjeno orodje. Tudi število uporabnikov bo manjše od pet, poleg tega pa predvidevamo, da uporabniki ne bodo sočasno dostopali do podatkovne baze.\nIzdelovanje obrazcev, poizvedb in poročil v Accessu je omogočeno na več načinov in sicer v pogledu načrtovanja ali pa s pomočjo čarovnika. Najhitrejši način za izdelavo obrazca je s pomočjo čarovnika, ki ga lahko ročno popravimo in vgradimo dodatne kontrolnike. Prav tako poizvedbo najlažje izdelamo s čarovnikom, ki jo je možno popraviti in v pogledu SQL prilagoditi našim željam in potrebam.\n"], "11": ["3.2 POSTOPEK IZDELAVE", "Razvoj prototipne rešitve je potekal v dveh korakih:   Izdelava podatkovne baze.   Izdelava računalniškega programa (izdelava obrazcev, poizvedb, poročil,  makrov, modulov). \nRelacijska podatkovna zbirka je določena z naborom entitet (tabel), ki jo sestavljajo, s strukturo posameznih entitet in z relacijami med njimi.\nS strukturo določimo, kateri atributi (stolpci) so v posamezni entiteti ter določimo primarni ključ, ki enolično označuje določeno entiteto.\nRelacijo med entitetami določimo s primarnim ključem v eni entiteti ter ustreznim tujim ključem v drugi entiteti. Tuj ključ je atribut v entiteti, ki je istočasno ključ neke druge entitete.\nPri tem smo morali uporabiti tudi postopek normalizacije, saj smo v podatkovni bazi želeli imeti vse podatke, ki jih potrebujemo za vodenje lastnih evidenc ter podatke, ki jih moramo letno poročati pristojnim državnim organom.\nS postopkom normalizacije podatkovnim bazam urejamo strukturo entitet ter preverjamo novonastale entitete, če ustrezajo predpisanim pogojem. Pri tem postopoma entitete dobivajo »pravilno« strukturo. Pri normalizaciji poznamo pet oblik (od prve do pete normalne oblike). Pri tem postopku moramo priti čim dlje proti peti normalni obliki, čeprav v večini primerih zadostuje že tretja normalna oblika.\n"], "12": ["3.3 IZDELAVA PODATKOVNE BAZE", "Podatkovna baza, tudi podatkovna zbirka, je sklop zbirke dokumentov, medsebojnih sklicevanj na dokumente in sistema za razvrščanje, iskanje in urejanje podatkov v bazi. Podatkovna baza je torej tudi klasična knjižnica, a v vsakdanjem pogovoru baza pomeni računalniški sistem za hrambo podatkov. Podatkovne baze so se pojavile zaradi potrebe po hitrem dostopu do informacij, saj hramba podatkov iz preteklosti omogoča premišljeno odločanje o prihodnosti. S takšnim namenom so oblastniki gradili knjižnice in tak namen vodi današnja podjetja, da ustvarjajo zbirke podatkov o povpraševanju, strankah, vremenskih razmerah in sploh vsem, kar ima možnost vpliva na bodoče poslovanje [5].\nPri izdelavi podatkovne baze s programom Access smo želeli zajeti vse podatke, ki jih potrebujemo za lastno evidenco, ter podatke, ki jih sporočamo drugim institucijam. Pri tem je pomembno tudi to, da podatkovno bazo lahko v bodoče tudi dopolnimo oziroma nadgradimo z dodatnimi entitetami in/ali atributi.\nV nadaljevanju prikazujemo zgradbo (vsebino) podatkovne baze, v kateri je trinajst entitet. Povezavo med entitetami predstavlja entitetno relacijski diagram. Poleg tega predstavljamo atribute v posamezni entiteti. \n"], "13": ["3.4 IZDELAVA LASTNE IKONE", "Iz spletne strani http://www.axialis.com [4] smo prenesli program IconWorkshop, ki smo ga namestili v računalnik. Program je enostaven za uporabo in omogoča izdelavo ikon za različne operacijske sisteme (Windows, MacOs). Ikono smo izdelali iz slike. V nadaljevanju podajamo kratek postopek izdelave.\nPo namestitvi programa le-tega zaženemo z dvojnim klikom na ikono Axialis IconWorkshop, ki je prikazana na sliki 18.\nNato izberemo Nov projekt iz slike (New  Icon Project from Image). Odpre se novo okno, kjer izberemo sliko, ki jo želimo pretvoriti v ikono. Slike imajo lahko naslednje končnice: *.Bmp, *.Aio, *.Psd, *.Png, *.Gif, *.jpg, *.J2P, *.TIF, ...\nNa disku poiščemo želeno sliko, jo označimo in kliknemo gumb ODPRI. V aktivnem oknu, kjer je odprta slika kliknemo ikono za izdelavo ikone iz slike za operacijski sistem Windows (Create Windows® Icon from Image (I)). Po kliku ikone se odpre novo pogovorno okno, kjer izberemo ime ikone ter želeni format slike (velikost in barve). Pri nekaterih možnostih je viden tudi predogled ikone. Pri izboru formata slike moramo biti pozorni na različico operacijskega sistema, za katerega izdelujemo ikono (XP, Vista). Pravilna izbira formata pa je pomembna tudi v primeru, če želimo naknadno popravljati sliko. Večjo ločljivost kot bomo izbrali, bolj natančno bomo lahko popravili sliko. Po končani izbiri kliknemo gumb OK. Sedaj lahko sliko tudi ročno popravimo.\nKo smo zaključili z morebitno obdelavo slike, v aktivnem oknu kliknemo ikono za shranjevanje in izberemo mesto na disku, kamor jo želimo shraniti. Kliknimo še gumb Shrani. S tem smo zaključili postopek izdelave ikone iz slike. Program le še zapremo. Izdelana ikona dobi končnico *.ico.\nIzdelana ikona je pripravljena, da jo vgradimo v program kot ikono obrazca in poročila. Uporabimo jo lahko tudi kot ikono za bližnjico do programa, kjer jo zamenjamo s privzeto ikona Accessa.\n"], "14": ["3.5 IZDELAVA RAČUNALNIŠKEGA PROGRAMA", "Namen računalniškega programa je poenostaviti vnašanje, iskanje in pregledovanje podatkov v podatkovni bazi. Podatke lahko vnašamo neposredno v tabele. Sam postopek vnašanja je uporabniku veliko prijaznejši preko obrazcev, saj nam ti omogočajo vgradnjo različnih gradnikov. Najpogostejša so kombinirana polja, izbirna polja, potrditvena polja,… Izpolnjevanje obrazcev postane enostavno, poleg tega pa je uporabnik enostavno voden skozi celotni postopek vnašanja podatkov. Izdelali smo tudi uporabniške vmesnike, s pomočjo katerih je premikanje med obrazci še lažje.\nV nadaljevanju bomo predstavili le nekatere uporabniške vmesnike, obrazce in poročila.\nZa odpiranje programa smo izdelali bližnjico.\nPo dvojnem kliku na bližnjico se odpre glavni meni, na katerem lahko izbiramo med tremi možnostmi: vnašanjem podatkov, pregledovanjem poizvedb in izdelavo poročil.\nZa lažje in preprostejše vnašanje podatkov smo izdelali obrazce, s pomočjo katerih vnašamo podatke v podatkovno bazo. Na sliki 24 je prikazan eden izmed številnih obrazcev.\nNa podlagi vnesenih podatkov izdelujemo različne poizvedbe, ki jih nato tiskamo v obliki poročil. Na sliki 25 je prikazana poizvedba v pogledu SQL, na podlagi katere izdelamo poročilo.\n3.6 UPORABNIŠKO TESTIRANJE RAČUNALNIŠKEGA PROGRAMA V postopek testiranja računalniškega programa smo vključili dva potencialna uporabnika, ki sta sodelavca v podjetju, kateremu je program namenjen. Prvi uporabnik vsakodnevno uporablja računalniške programe Microsoft Office-a in ima več znanja pri uporabi teh programov. Drugi uporabnik pa programe Microsoft Office-a uporablja zgolj občasno.\nTestiranje programa je potekalo na računalniku, ki je imel nameščen program Access. Prototipno rešitev smo namestili na strežnik, do katerega sta imela uporabnika dostop. Pri testiranju so bili na voljo vsi obrazci za vnos podatkov ter le nekaj poizvedb in poročil za vzorec. Testiranje je potekalo dve uri.\nSprva sta uporabnika uporabljala program brez pomoči. Ugotovili smo, da je uporabnik, ki je imel manj znanja z uporabo programov Microsoft Office-a, imel več težav pri uporabi programa. Zaradi tega smo mu pri nadaljnjem delu nudili pomoč, drugi uporabnik pa naše dodatne pomoči ni potreboval.\nV nadaljevanju so podane ugotovitve testiranja in opisane potrebne spremembe oziroma izboljšave programa.\nPodatkovna baza programa je zgrajena po principih relacijske baze, zato je pri vnosu podatkov pomemben vrstni red vnašanja. To se je izkazalo predvsem pri uporabi kombiniranih polj, kjer se podatki preberejo iz neke druge tabele. V teh tabelah mora biti podatek predhodno vnesen, če ga želimo uporabiti. Za hitrejše delo s programom je potrebno poleg kombiniranih polj dodati ukazne gumbe, ki bodo odprli ustrezno tabelo za vnos novega zapisa. Pri tem je potrebno zagotoviti osveževanje podatkov v kombiniranem polju.\nPri uporabi kombiniranih polj se je izkazalo, da se izpišejo vsi podatki iz tabele, na katero se navezujejo. Pri tem je v nekaterih primerih prišlo do nejasnosti in do prikaza nepotrebnih podatkov. Za jasnejši pregled podatkov bo potrebno dopolniti SQL stavke z dodatnimi pogoji. S tem bomo v kombiniranih poljih dobili podatke, ki se bodo nanašali le na želene atribute.\nPri nekaterih obrazcih je predvideno vnašanje slike kot atributa (pri objektih in opremi). Pri testiranju se je izkazalo, da je to dolgotrajni postopek, pri katerem lahko pride tudi do napake. Poleg tega se originalna slika ne skrči avtomatsko na predvideno velikost v obrazcu. Potrebno je proučiti smiselnost dodajanja slike kot atributa, saj se s tem upočasni delovanje programa ter poveča možnost pojavljanja napake.\nUporabnika z manj računalniškega znanja je motilo majhno število poizvedb in poročil, saj nima realne predstave o zmožnostih programa. Predstavljeno mu je bilo, da je to prototipna rešitev in da bodo dodatni izpisi izdelani naknadno.\nPri samem testiranju se je izkazalo, da lahko program kaj hitro zapremo tudi po pomoti. To se je največkrat zgodilo pri zapiranju poročil, v nekaterih primerih pa tudi \npri zapiranju ostalih oken. V ta namen smo v program vgradili programsko kodo, ki uporabnika pred zapiranjem programa obvesti v obliki sporočilnega okna.\nProgramska koda pred nenamernim zapiranjem programa napisana v VBA je naslednja:\n"], "15": ["4 ZAKLJUČKI", ""], "16": ["4.1 OCENA UČINKOV", "Vpeljava izdelane prototipne rešitve, ki je namenjena vodenju evidenc o objektih in opremi, ki se nahaja v teh objektih ima številne prednosti v primerjavi z dosedanjim načinom zbiranja in shranjevanja teh podatkov. Na ta način zagotovimo, da so vsi podatki shranjeni na enem neodvisnem računalniku (strežniku). Do podatkov tako lahko dostopajo vsi zainteresirani uporabniki, neodvisno od prisotnosti sodelavca. S tem zagotovimo enostavnejše iskanje želenih podatkov s pomočjo izbirnih poizvedb. Na ta način porabimo mnogo manj časa, da si pridobimo bolj zanesljive in točne informacije. Z uvedbo prototipne rešitve je možno kronološko spremljati posege na objektih in opremi, s čimer se ustvari arhiv. Vse želene podatke je možno tudi enostavno natisniti. Access pa nam omogoča enostaven prenos podatkov v Excel ali Word.\nPri uporabi programa je potrebno bazo podatkov dosledno posodabljati in sproti vnašati vse spremembe, ki se zgodijo na objektih in opremi.\n"], "17": ["4.2 POGOJI ZA UVEDBO", "Za uvedbo prototipne rešitve zadostuje obstoječa strojna in programska oprema. Med strojno opremo uvrščamo strežnik, ki se nahaja v poslovni enoti Vodovoda Komunale Kranj, in osebne računalnike, ki jih pri svojem delu uporabljajo zaposleni. Programska oprema pa zajema operacijski sistem Windows in programski paket Microsoft Office 2003 z vključenim Accessom.\nZaradi ustrezne obstoječe strojne in programske opreme ni potrebnih nobenih dodatnih finančnih sredstev.\nZaradi pomanjkljivega poznavanja uporabe programov paketa Microsoft Office pri zaposlenih, je potrebna izvedba dodatnega izobraževanja uporabnikov programa. Program je izdelan preprosto, zato je njegovo delovanje zelo podobno ostalim programom, ki jih vsakodnevno uporabljajo zaposleni pri svojem delu. S tem predpostavljamo, da pri uvajanju programa ne bomo imeli večjih težav, zato ga bodo zaposleni lahko hitro osvojili.\n"], "18": ["4.3 MOŽNOSTI NADALJNEGA RAZVOJA", "Obstaja več smeri možnosti nadaljnjega razvoja programa. V prvi vrsti je potrebno program dopolniti z izdelavo dodatnih poizvedb in poročil, saj jih je v prototipni rešitvi le nekaj za vzorec.\nV prototipno rešitev je potrebno vgraditi več nivojev varnosti z vnosom gesel. Prav tako je potrebno dodeliti pravice posameznim skupinam uporabnikov. Nekateri uporabniki bodo podatke lahko le pregledovali, ne pa tudi dodajali ali spreminjali.\nPodatkovno bazo se lahko razširi v smislu dodajanja novih entitet v povezavi z obstoječimi entitetami. Možno je tudi dodajanje atributov obstoječim entitetam predvsem v smislu spremljanja finančnih kazalcev o vgrajeni opremi v objektih.\nKljub stabilnemu in zanesljivemu delovanju programa bi bil smiseln prehod na drugo podatkovno bazo (SQL), saj ima kar nekaj prednosti pred Access-ovo. Ena izmed glavnih prednosti je ta, da omogoča upravljati in obvladovati večje število uporabnikov ter podatkov. S tem bi zagotovili višjo varnost in zanesljivejše delovanje programa. Sam prehod na Microsoft SQL-ovo bazo je enostaven, saj v Accessu obstaja preprost čarovnik, ki omogoča ta prehod.\n"], "abstract": ["V diplomski nalogi smo obravnavali problematiko načina vodenja ustreznih evidenc o objektih, ki se nahajajo na posameznem vodovodnem sistemu ter o opremi, ki se nahaja v teh objektih. Z dosedanjim načinom vodenja evidenc nismo zadovoljni, saj se podatki nahajajo v različnih dokumentih na lokalnih računalnikih. Velik problem predstavlja iskanje podatkov in sledenje posameznim posegom na objektih in opremi. Poleg tega vsi podatki niso ažurni. Za rešitev zgoraj opisanih težav smo izdelali prototipno rešitev, ki uporablja skupno podatkovno bazo. Prototipna rešitev je narejena z orodjem Access. Program poleg vodenja ustreznih evidenc vsebuje tudi druge podatke o vodovodnih sistemih, ki jih potrebujemo za izdelavo različnih poročil. S programom lahko enostavno in pregledno vnašamo podatke preko uporabniškega vmesnika. Program omogoča različne načine pregledovanja podatkov glede na potrebe uporabnika. Želene podatke lahko natisnemo ali izvozimo v druge programe MS Office-a."]}