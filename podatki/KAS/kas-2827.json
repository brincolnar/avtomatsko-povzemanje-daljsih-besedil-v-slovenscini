{"1": ["1 UVOD", ""], "2": ["1.1 Mesto in vloga informatike v organizaciji", "Vsa izrazitejša konkurenčnost okolja, zmogljivejša informacijska tehnologija in nova znanja kadrov postavljajo pred organizacijo zahtevo po več in kakovostnejših podatkih ter ustreznejšem upravljanju s podatki. Te spremembe okolja bodo vodstvom organizacij narekovale potrebe po sprotnih informacijah, izhajajočih iz najrazličnejših virov in različnih ravni agregacij. V želji po preživetju bodo morale organizacije izboljšati pristop do podatkov v najširšem smislu. Zato v vse večjem številu organizacij prevladuje ugotovitev, da je potrebno podatke obravnavati in za njih skrbeti ravno tako kot za vse ostale dejavnike organizacije. Več kot 80% delovnega dneva temelji na sprejemanju in uporabi informacij v različne namene. Ker je informacija osnova vseh aktivnosti organizacije, moramo razviti sistem, ki omogoča pridobivanje in uporabo informacij. Cilj takega sistema je zagotovitev natančne informacije v primarni uporabni obliki takrat, ko je uporabniku najbolj potrebna.\nInformacijski sistem je celota sestavin, ki zagotavljajo podatke, informacije in povezave med temi sestavinami ter z okoljem organizacije. Ljudje z uporabo informacijske tehnologije pridobivajo podatke in si na njihovi osnovi oblikujejo informacije.\nCilj delovanja informacijskega sistema je izboljšati učinkovitost ljudi v organizaciji s pomočjo informacijske tehnologije, izboljšati kakovost odločanja in omogočiti dostop do pravočasnih informacij.\n"], "3": ["1.2 Namen in cilji diplomske naloge", ""], "4": ["1.2.1 Namen naloge", "Namen diplomske naloge je predstaviti izgradnjo informacijskega sistema, ki podpira proces organiziranja tečajev za uporabnike sistema MFERAC.\n"], "5": ["1.2.2 Cilji naloge", "Cilj naloge je predstaviti razvoj programske rešitve za spremljanje evidence o tečajih sistema MFERAC, testiranje sistema z realnimi podatki in ugotavljanje ustreznosti sistema. Programska rešitev vključuje bazo podatkov in uporabniško aplikacijo izdelano v programskem orodju Microsoft Access 2000, ki omogoča: − celovit vpogled v dejavnost, − olajšano delo pri vodenju dokumentacije, − popolno evidenco, − učinkovito delo s podatki, − hiter dostop do podatkov, − kvalitetnejše načrtovanje dela. \n"], "6": ["2 METODE MODELIRANJA INFORMACIJSKIH SISTEMOV", ""], "7": ["2.1 Modeliranje procesov in podatkov pri izgradnji informacijskih sistemov", "Modeliranje uporabljamo pri raziskovanju ali reševanju problemov na najrazličnejših področjih. Človek se največkrat niti ne zaveda, da pravzaprav večino svojih aktivnosti izvršuje po nekem vzorcu ali neki modelni predstavi. Večina modelov, ki jih uporabljamo v vsakdanjem življenju, je miselne ali abstraktne narave. Predstave o stvarnosti so v človekovi zavesti vedno nekoliko poenostavljene, predvsem zato, ker so človekove zmožnosti abstraktnega mišljenja in pomnjenja omejene (Kovačič, Vintar, 1994).\nModel je temelj vsem tehnikam analize in snovanja sistemov, ne le informacijskih sistemov. Vsak model je poenostavljen prikaz izbranih vidikov dejanskega ali načrtovanega sistema; je preslikava naših predstav o stvarnosti, ne pa stvarnosti same, kar povečuje možnost za odstopanje med originalom in modelom. Model je vedno v nekem odnosu s svojim originalom in med njima obstaja analogija in podobnost, kar se odraža v enaki strukturi, funkciji, obnašanju ali v vseh treh lastnostih. Analitik na osnovi pogovora z uporabnikom opiše in dokumentira njegove zahteve tako, da izdela model predvidene rešitve. Ta model mnogo enostavneje dopolnjuje in spremlja kot neko že izdelano računalniško rešitev. Študij modela omogoča tako uporabniku kot analitiku boljše razumevanje sistema in odpravljanje napak že v začetnih fazah razvoja.\nUstrezni modeli so osnova, da lahko pravilno in v celoti spoznamo ter opišemo probleme na različnih področjih. Na področju informatike je izmenjava informacij med sodelavci na nekem projektu še posebej intenzivna, zato je toliko bolj pomembno, da znamo obravnavane probleme čim bolj jasno in natančno opredeliti in opisati. Poleg tega so različni modeli tudi pomembna metoda dokumentiranja dela posameznika ali skupine.\nPostopek zasnove in gradnje informacijskega sistema pravzaprav temelji na modeliranju posameznih razvojnih faz ne glede na izbrano metodologijo. Začetek razvoja informacijskega sistema predstavlja definicija problema na osnovi analize obstoječega stanja in ugotovljenih pomanjkljivosti ter na osnovi analize želja in zahtev, ki naj bi jih izpolnjeval novi sistem. Naslednji korak je razvijanje sistema, ko je sistem izdelan, ga je treba uvesti v prakso. Nekaj časa obratuje poskusno, nato pa redno. V toku rednega obratovanja oz. izvajanja je treba sistem vzdrževati, kar tudi pomeni prilagajanje spremembam v organizaciji ali v okolju. Sčasoma postanejo te spremembe tako velike, da nadaljnje prilagajanje sistema ni več smotrno – sistem postane zastarel in ga je potrebno zamenjati z novim. Proces nastajanja in delovanja informacijskega sistema poimenujemo življenjski ciklus informacijskega sistema (Gradišar, Rasinovič, 1997). \nSlika 1 prikazuje tipični razvojni ciklus informacijskega sistema, ki obsega študijo izvedljivosti, zbiranje in analizo zahtev, načrtovanje, izdelavo prototipa, uvajanje, vrednotenje in testiranje ter obratovanje in vzdrževanje.\nŠTIDIJA IZVEDLJIVOSTI\nIMPLEMENTACIJA\nVREDNOTENJE IN  TESTIRANJE\nOBRATOVANJE IN  VZDRŽEVANJE\nŠtudija izvedljivosti. Pred pričetkom izvajanja glavnega projekta je potrebno preveriti vrsto možnih alternativnih izvedb in za vsako oceniti razmerje med predvidenimi koristmi in stroški. Pri razvoju sistema v več fazah je potrebno določiti njihovo časovno zaporedje, tako da se najprej rešujejo najbolj pereči problemi in tisti, pri katerih so koristi najizrazitejše.\nZbiranje zahtev in analiza. Določiti je treba namen in cilje, ki jih z izgradnjo informacijskega sistema želimo doseči. Hkrati določimo katere poglavitne probleme želimo rešiti. Sledi zbiranje zahtev in želja bodočih uporabnikov, ki morajo po svojih najboljših močeh opisati svoje potrebe. Le-te so vodilo v fazi analize, ko je potrebno analizirati problemsko področje in zbrati vse potrebne podatke za naslednjo fazo. Zbirajo se le ključni podatki, pomembni s stališča sedanjega in želenega bodočega delovanja organizacije.\nNačrtovanje. Načrtovanje lahko v grobem razdelimo na podatkovno in postopkovno. Podatkovno načrtovanje obsega razvoj podatkovne baze na osnovi podanih zahtev in obsega faze konceptualnega, logičnega in fizičnega načrtovanja. Postopkovno načrtovanje \nobsega specifikacijo lastnosti bodočega sistema, definiranje programskih modulov in programskih specifikacij. Kvaliteta načrtovanja informacijskega sistema je v največji meri odvisna od razumevanja delovanja realnega sveta. Če napačno razumemo funkcioniranje realnega sveta, je skorajda nemogoče, da bo informacijski sistem, ki bo zasnovan skladno s tem razumevanjem in predstavami, deloval optimalno.\nIzdelava prototipa. Zato, da bi bile uporabniške zahteve kar najbolj razumljive in da se ne bi bilo potrebno iz kasnejših faz prepogosto vračati v predhodne, je koristno izdelati prototip sistema, s pomočjo katerega se uporabniki seznanijo z njegovimi bodočimi lastnostmi. Najbolje se da na ta način preveriti uporabniški vmesnik, s katerim bodo uporabniki imeli največ opravka.\nUvajanje. Uvajanje je proces vzpostavljanja tekoče uporabe sistemov organizaciji. Proces obsega predvsem izobraževanje in urjenje uporabnikov za delo na novem sistemu, izdelava dokumentacije za uporabnike, vnos začetnih stanj v podatkovno bazo in organiziranje prehoda iz starega na nov sistem. V tej fazi se zagotovi vire za delovanje informacijskega sistema, da bi omogočili njegovo uporabnost.\nVrednotenje. Informacijski sistemi niso samo računalniki in programi, pač pa tudi ljudje, ki z njimi rokujejo. V tej fazi se ugotovi ali je razviti sistem dovolj prilagojen poslovnemu sistemu, ali lahko uporabniki z njim učinkovito rokujejo, ali zares prispeva k učinkovitemu delovanju poslovnega sistema, ali pravilno deluje in ali je dovolj zmogljiv.\nObratovanje in vzdrževanje. Ta faza traja vse nadaljnje obdobje življenjskega cikla sistema. Obratovanje je tekoča uporaba sistema in, predvsem na začetku, iskanje morebitnih skritih napak. V toku tekoče uporabe je potrebno iskati in odkrivati tudi možnosti za čimbolj učinkovito izrabo sistema. Vzporedno z izvajanjem poteka vzdrževanje. Zaradi spreminjajočega se okolja je sistem potrebno ves čas prilagajati novim zahtevam in ga vzdrževati tako po programski kot tudi po strojni plati. Vzdrževanje informacijskih sistemov ni odpravljanje okvar na opremi, ampak je prilagajanje le-teh na nenehno se spreminjajoče potrebe uporabnikov. Ko to ni več mogoče ali ko stroški vzdrževanja prerastejo razumno mejo, je potrebno sistem zamenjati z novim.\n"], "8": ["2.2 Modeliranje postopkovnega dela informacijskih sistemov", "V večini informacijskih sistemov procesi in podatki predstavljajo dva precej uravnotežena dela sistema, zato ju je tudi pri zasnovi informacijskega sistema potrebno enakovredno obravnavati.\nPostopek je temeljni koncept, s katerim modeliramo dinamiko informacijskega sistema. Postopek je definirana poslovna ali proizvodna aktivnost, ki predstavlja logično zaključeno celoto, katere izvedba je opredeljena z vhodno/izhodnimi podatki in pravili za njihovo obdelavo. Postopki so osnovna aktivnost in sestavina poslovnih procesov, zato z njihovim modeliranjem in opredelitvijo posredno opredeljujemo tudi poslovna pravila oz. pravila obnašanja obravnavanega sistema.\nZ modeliranjem postopkov skušamo doseči več ciljev:  ♦ postopkovni modeli nam omogočajo boljši vpogled v strukturo in delovanje  posameznih poslovnih funkcij ali sistema kot celote;  ♦ omogočajo lažjo komunikacijo med načrtovalci sistema in uporabniki, ki delajo  na obravnavanem področju;  ♦ omogočajo razstavljanje poslovnih funkcij oz. delov poslovnega sistema na  manjše sklope vse do elementarnih postopkov, kar razrešuje problem  kompleksnosti;  ♦ omogočajo opredelitev ključnih značilnosti načrtovane računalniške rešitve  (Kovačič, Vintar, 1994).\nZa modeliranje procesov se najpogosteje uporablja metoda, znana pod nazivom strukturna analiza sistemov (Structured Systems Analysis). Rezultat projektiranja s strukturno analizo sistemov je model procesov, imenovan tudi diagram toka podatkov. Na tem diagramu so prikazani procesi organizacijskega sistema, ki opravljajo vsako operacijo s podatki. Tako lahko vidimo na diagramu, kateri podatki so v procesu vhodni in kateri izhodni. Projektant informacijskega sistema planira na podlagi takšne sheme procesov programe, ki bodo zamenjali obstoječe ročno opravljene procese (Srića, Traven, Pavlič, 1995).\nDiagram toka podatkov\nDiagram toka podatkov (DTP) je najbolj razširjena tehnika modeliranja postopkov, s katero v obliki modela predstavimo postopke informacijskega sistema in pretok podatkov oz. dokumentov med njimi.\nPod postopkom razumemo del modeliranega sistema, ki izvaja neko aktivnost, s katero  se transformira vhode v izhode. Vsak postopek ima svoje ime. Imenovani morajo biti  tako, da je iz njih mogoče razbrati pretvorbo vhodnih tokov podatkov v izhodne.\nTok podatkov ali podatkovni tokovi \nPod tokom podatkov razumemo prenos oz. potovanje podatkov, dokumentov med  različnimi deli sistema. Tok vedno predstavlja podatke v gibanju in ne v mirovanju.  Puščice predstavljajo vse podatkovne vhode, ki so potrebni za izvedbo obravnavanega  postopka, ter vse podatkovne izhode, ki nastanejo kot rezultat izvedbe postopka.  Predstavljajo sporočila, ki potekajo med postopki oz. postopki in zunanjim svetom.\nZbirka ali baza podatkov  Baza podatkov se uporablja za modeliranje podatkovnih zbirk, ki nastajajo v okviru  modeliranega informacijskega sistema. Podatkovni tokovi, ki vodijo v zbirke  podatkov, izstopajo iz postopkov. Tokovi, ki vodijo v zbirke podatkov, vstopajo v  postopke.\nIzvori in ponori tokov podatkov predstavljajo tiste zunanje elemente, s katerimi sistem  komunicira. Od njih prihajajo vhodni podatki, dokumenti, vanje se stekajo izhodni  podatki oz. rezultati sistema. Pogosto so izvori in ponori povzročitelji dogodkov, ki  sprožijo izvajanje določenega procesa. To so lahko ljudje, uporabniki sistema, poslovni  partnerji, organizacije, idr., za katere je značilno, da niso pod kontrolo sistema.\nS pomočjo DTP lahko hitro odkrijemo napake in elemente, ki smo jih spregledali in manjkajo.\nZ diagrami podatkovnih tokov prikazujemo različne nivoje podrobnosti procesa. Tok na najvišjem nivoju imenujemo kontekstni nivo. Kontekstni diagram prikazuje sistem, vse zunanje entitete, ki so v interakciji s sistemom, in vse tokove podatkov, ki povezujejo entitete s sistemom. Vsak proces lahko razčlenimo na procese nižjega nivoja. Razčlenjevanje procesov lahko nadaljujemo toliko časa, dokler ne pridemo do elementarnih procesov. Elementarni proces je tisti proces, ki splošno izvrši eno samo določeno funkcijo. \n"], "9": ["2.3 Oblikovanje modela podatkov", "Podatki so »surovina«, ki se pretaka skozi informacijski sistem in se v njem obdeluje, shranjuje, itd., v končni fazi so tudi njegov produkt. Zato se veliko pozornosti v okviru modeliranja informacijskih sistemov namenja prav podatkom. Modeliranje podatkov in podatkovni modeli so se razvijali vzporedno z razvojem informacijske tehnologije. Najprej so se razvili preprosti modeli za predstavitev fizičnih struktur podatkov. Pomembnost modeliranja je narasla s pojavom in razvojem konceptov podatkovnih baz. Spoznanje, da je pri modeliranju podatkov najpomembnejše čim bolj verno predstaviti njihov pomen, njihove logične povezave je vodilo v razvoj novih konceptov in modelov, ki omogočajo boljšo predstavitev pomena ter vsebine, tj. semantike podatkov. Zato novi modeli (semantični podatkovni modeli) uvajajo širše in bogatejše koncepte modeliranja podatkov, ki omogočajo boljši prikaz semantike podatkov v fazi modeliranja informacijskega sistema in izdelave konceptualnega ali logičnega modela informacijskega sistema. Pozornost pri razvoju informacijskih sistemov se vse bolj pomika v zgodnje razvojne faze, strateško načrtovanje in logično zasnovo informacijskega sistema (Kovačič, Vintar, 1994).\nNamen modeliranja podatkov je določiti tiste podatke iz organizacije, ki jih bomo shranili v podatkovno bazo, jih razvrstiti v skupine ter med seboj povezati. Z modeliranjem podatkov skušamo čim bolj stvarno predstaviti neki izsek realnega sveta ter njegove lastnosti. Model podatkov zajema podatke in njihovo predstavitev, tako da se čim več znanj iz stvarnega sistema vgradi v model. Model podatkov je kasneje podlaga za razvoj podatkovne baze.\nSodobne metode za izdelavo zasnove baze podatkov pripisujejo velik pomen izdelavi primernega modela podatkov, ki je prvi osnutek kasnejše natančne tehnične zasnove baze podatkov. Model podatkov je neodvisen od kasnejše detaljne zasnove baze podatkov in implementacije, zato je razumljiv tudi za ljudi, ki tehnično niso podkovani, razumejo pa delovanje organizacije in pomen podatkov. Modeliranje je aktivnost, katere cilj je v bistvu razumevanje resničnega sveta in določitev entitet, o katerih moramo v bazi podatkov zbirati podatke, ter odnose med entitetami. Model podatkov predstavlja temelj za nadaljnje delo. Izdelava dobrega in uporabnega modela podatkov zahteva natančno analizo in presojo organizacije ter aktivnosti, ki jih organizacija izvaja (Baumgartner, 1987).\nDiagrami modela podatkov so namenjeni grafičnemu prikazu podatkov in povezav med njimi na vseh ravneh. Uporabljamo jih v vseh fazah razvijanja informacijskih sistemov. Model podatkov ima poleg ostalih pomenov, predvsem komunikacijski značaj, saj predstavlja najbolj stabilno sestavino informacijskega sistema. Danes za to najpogosteje uporabljamo model entiteta-povezava (Entity-Relationship ali na kratko ER model).\n"], "10": ["2.3.1 Model entiteta – povezava (Entity-Relationship)", "Model entiteta – povezava se je uveljavil v praksi za modeliranje podatkov na logični ravni in združuje lastnosti mrežnega in relacijskega modela. Njegova največja prednost je enostavnost konceptov in možnost enostavne transformacije, bodisi v relacijski model ali druga dva klasična modela.\nPogosto vodi pot do izgradnje logične sheme podatkovne baze preko vmesnega konceptualnega modela, npr. ER modela. Konceptualni modeli so namreč veliko preprostejši za razumevanje in služijo kot most med sporazumevanjem med uporabniki in načrtovalci pri načrtovanju baze podatkov. Pomembna je njihova dokumentacijska vrednost, saj služijo kot izhodišče pri vseh kasnejših dopolnitvah in spremembah logičnega modela baze podatkov. ER model ni usmerjen v izvedbo baze podatkov niti v predstavitev baze podatkov, temveč v konceptualno predstavitev podatkov, kakor jih vidi uporabnik. Z njim je mogoče na poljuben, razumljiv in formalen način, predstaviti model okolja, ki je razumljiv uporabniku. Konceptualni model modeliranega sveta nato preslikamo v relacijski model (Mohorič, 1997).\nZa vsak podatkovni model je pomembno, da ga je mogoče grafično predstaviti, saj je tak prikaz najboljše komunikacijsko sredstvo med sodelavci tima, ki delajo na razvoju projekta. Za modele, ki jih uporabljamo pri modeliranju podatkov na logični ravni, je to še posebno pomembno, saj bi tak model najbolje razumeli tudi uporabniki, ki jim je načrtovani sistem namenjen. Za model ER obstaja preprosta grafična notacija, ki pa žal ni standardizirana. Različna računalniška orodja in različni avtorji ponujajo različne simbole za izražanje diagramov povezav entitet, vendar pa razlike med njimi niso velike. Razlike nastopajo predvsem pri prikazovanju povezav med tipi entitet.\nModel ER temelji na uporabi treh osnovnih konceptov, in sicer entitete, povezave in atributa.\nEntiteta je realen ali abstrakten pojem, o katerem zbiramo in hranimo podatke.\nPosamezni podatek, ki opisuje določeno entiteto, imenujemo atribut ali podatkovni element.\nS podatkovno povezavo izrazimo povezanost med dvema predmetoma podatkov. Pri modeliranju podatkov je pomembno čim bolje in natančneje predstaviti odnose med objekti realnega sveta, ki ga modeliramo. Če velja v organizaciji pravilo, da lahko zaposleni dela samo za en oddelek, je bistveno to zabeležiti tudi v modelu.\nPovezave v modelu podatkov so običajno dvosmerne, saj nas zanimajo odnosi v obeh smereh. Tako namreč dovolj natančno opredelimo poslovna pravila, ki se kažejo skozi podatkovno razsežnost poslovnega modela. Tvorimo lahko naslednje povezave: 1:1, 1:M ali M:1, M:M. Nekatere povezave so obvezne, druge ne. \nOsnovne povezave\nPovezava 1:1 (en A ima vedno in samo en B) Dvosmerna povezava ena-z-eno 1:1 pove, da je v določenem trenutku posamezna vrednost postavke A povezana z eno in eno samo vrednostjo postavke B in obratno, posamezna vrednost postavke B je povezana z eno in eno samo vrednostjo postavke A.\nPovezava 1:M (en A ima en ali več B) Dvosmerna povezava ena-z-mnogimi 1:M določa, da je posamezna vrednost postavke A povezana z eno, nobeno ali pa več vrednostmi postavke B, hkrati pa je vsaka posamezna vrednost postavke B povezana z natančno eno vrednostjo postavke A. Seveda je lahko hkrati več vrednosti iz B povezanih z isto vrednostjo iz A; povezava (preslikava) B z A je v tem primeru tipa M:1.\nPovezava M:M Dvosmerna povezava M:M določa povezavi ena-z-mnogimi v obeh smereh: vsaka posamezna vrednost postavke A(B) je lahko povezana z eno, nobeno ali več vrednostmi postavke B(A).\nIzbirna povezava 1:1 (en A ima nič ali en B) Če povezavo pogojimo z določenim pogojem, dobimo pogojno povezavo, ki določa, da v danem trenutku pripada posamezni vrednosti postavke A natančno ena ali pa nobena vrednost postavke.\nObvezne in neobvezne povezave\nNačin sodelovanja entitet v povezavah je lahko različen in odvisen od pravil, ki veljajo v svetu, ki ga modeliramo. Glede na to lahko definiramo obvezne in neobvezne povezave. Povezava je obvezna, kadar mora biti primerek entitete A povezan vsaj z enim primerkom entitete B. Pri neobveznih povezavah pa primerki entitete A lahko participirajo v povezavi s primerki entitete B, ni pa nujno.\nKljub temu, da so diagrami povezav entitet videti preprosti in povezave očitne, lahko pojasnijo in preprečijo, da bi se nepravilna postavka pokazala šele potem, ko bi program že deloval in bi odprava take napake povzročila veliko dodatnega dela. \n"], "11": ["2.3.2 Relacijski podatkovni model", "Relacijski podatkovni model se uporablja za predstavitev podatkovne baze na konceptualnem in zunanjem nivoju, hkrati pa je tudi sredstvo za specifikacijo njene konceptualne in zunanje sheme. Je formalno definiran in ne vsebuje elementov fizičnega shranjevanja podatkov. Relacije na katerih temelji so predstavljene s tabelami. Osnovna koncepta relacijskega podatkovnega modela sta domena in relacija. Relacija je definirana nad množico domen. Domene so množice, njihovi elementi so vrednosti predstavljene v obliki podatkov, ki se lahko hranijo in obdelujejo v računalniku (Mohorič, 1997).\nV relacijskem modelu podatke iz dveh ali več relacij vsebinsko povezujemo s skupnimi atributi. Skupni atributi, ki služijo za povezavo dveh ali več relacij, so tisto nujno podvajanje podatkov, ki je v relacijskih bazah dopuščeno.\nPrikaz podatkovne baze z relacijskim modelom je preprost in zato tudi najbolj pogosto uporabljen. Ta model je temelj za gradnjo podatkovne baze, za oblikovanje programov za njeno vzdrževanje in programov za pridobivanje poročil iz podatkovne baze.\nRelacijski model podatkov omogoča lahko razumljiv način oblikovanja izbora podatkov iz več datotek v novo datoteko, ki vsebuje rezultate nekega poizvedovanja, torej podatke, ki ustrezajo določenim pogojem.\nPreslikava ER modela v relacijski model\nModel podatkov, ki je oblikovan s pomočjo metode objekti - povezave, je treba prevesti v računalniku razumljiv model podatkov. Temu postopku pravimo normalizacija. Normalizacija je analiza funkcionalnih odvisnosti med atributi oz. podatkovnimi elementi. Je tehnika oblikovanja takega podatkovnega modela, ki je v skladu z logiko računalniškega obdelovanja in shranjevanja podatkov. Namen normalizacije je prevedba kompleksnega modela podatkov v podmnožico preprostejših in stabilnejših podatkovnih struktur. Normalizirane podatkovne strukture so fleksibilnejše in stabilnejše ter jih je lažje vzdržati kot nenormalizirane strukture.\nNormalizacija poteka postopoma. Poznamo več stopenj normalizacije, v praksi se najpogosteje uporabljajo prve tri stopnje. Osnovne korake postopka normalizacije prikazuje slika 4. Izhajamo iz ER modela, ki je nastal v fazi logičnega modeliranja podatkov in je običajno nenormaliziran, ni pa nujno. Izkušeni razvijalci pogosto že intuitivno skušajo model približati tretji normalni formi. Vsak tip entitete nam v tej fazi predstavlja eno nenormalizirano relacijo. \nModel uporabnika\nV prvem koraku, ki nas pripelje do modela v prvi normalni formi (1NF), moramo odstraniti iz relacij t.i. ponavljajoče se skupine atributov (repeating groups) ter z njimi tvoriti nove relacije.\nV drugem koraku se osredotočimo na tiste relacije, katerih ključi so sestavljeni iz več atributov in iz njih izločimo vse atribute, ki niso odvisni od celotnega sestavljenega ključa relacije. Z njimi ponovno oblikujemo nove relacije in s tem pripeljemo model v drugo normalno formo (2NF).\nV tretjem koraku odstranimo še t.i. prehodne ali tranzitivne odvisnosti med atributi in po potrebi oblikujemo nove relacije in s tem pripeljemo model v tretjo normalno formo (3NF).\nPreslikava konceptualnega podatkovnega modela v relacijski model je razmeroma enostavna, kajti vsak pravokotnik konceptualnega modela predstavlja relacijo, prav tako atributi v pravokotnikih predstavljajo atribute relacij. \n3 ANALIZA INFORMACIJSKEGA SISTEMA ZA PODPORO  IZOBRAŽEVANJA\nMinistrstvo za finance se deli na štiri področja dela, in sicer na finančni sistem, zakladništvo, sistem davčnih, carinskih in drugih javnih prihodkov ter na področje proračuna.\nSlužba za informacijsko tehnologijo, kot podporna služba sodi pod generalni sekretariat, kjer se opravljajo naloge, ki se nanašajo na usklajevanje opravljanja spremljajočih, organizacijskih, strokovno tehničnih in drugih nalog; usmerjanje in spremljanje oblikovanja in uveljavljanja notranjih načel, pravil in postopkov delovanja ministrstva, njegovih organov, organizacijskih enot in različnih teles, ter druge naloge, ki so povezane z delovanjem ministrstva.\nSlužba za informacijsko tehnologijo načrtuje in izvaja informatizacijo ministrstva in drugih organov v sestavi, zagotavlja usklajenost tekočega delovanja in razvoja, skrbi za svetovanje in nadzor nad izvajanjem sistema zaščite informacijske tehnologije, svetuje in nadzoruje upravljanje tveganj informacijske tehnologije. Služba za informacijsko tehnologijo ima za posamezna področja dela naslednje notranje organizacijske enote:\n- Vodstvo,\n- Oddelek za podporo uporabnikom MFERAC,\n- Oddelek za podporo UJP-plačilni promet in zakladnica,\n- Oddelek za aplikativne rešitve,\n- Oddelek za sistemsko podporo.\nV Oddelku za podporo uporabnikom MFERAC se izvajajo naloge, ki so povezane s projektom MFERAC (Ministrstvo za finance enotni računovodski sistem). Projekt MFERAC se je začel izvajati na podlagi sklepa Vlade RS iz leta 1995 in razpisa MFERAC-96-01.\nCilji projekta MFERAC so:\n- izgradnja računalniško podprtega enotnega računovodskega sistema Ministrstva za  finance;\n- izdelava aplikacijskih rešitev za finančno računovodsko področje za potrebe MF in  proračunskih uporabnikov;\n- enotni način izvrševanja proračuna in vodenja računovodstva proračunskih  uporabnikov;\n- zajem podatkov na mestu nastanka;\n- uporaba sodobnih razvojnih orodij in baze;\n- zagotoviti lastništvo nad programsko opremo in na ta način neodvisnost MF.\nNa podlagi uspešno izvedenih faz razvojnega cikla (analiza, načrtovanje, izvedba), se je začela zadnja faza in sicer vpeljava. Vpeljava je potekala na različnih stopnjah, zadnja od teh pa je bila vpeljava končnega uporabnika s tečaji za pridobitev znanja za uporabo obdelav MFERAC. \n3.1 Opis problema za katerega se razvija programska rešitev\nMinistrstvo za finance organizira tečaje za pridobitev znanja za uporabo obdelav MFERAC v skladu s cilji projekta MFERAC. Opraviti jih morajo vse osebe, ki pri svojem delu aplikacije uporabljajo (opravljen tečaj je pogoj za dodelitev uporabniškega imena).\nZa organizacijo tečajev je zadolžena Služba za informacijsko tehnologijo. Proces organiziranja tečajev je časovno zelo naporen, saj se glavnina postopkov še vedno izvaja ˝ročno˝. Zaradi večkratnega prepisovanja istih podatkov prihaja do podvajanja podatkov, napak ali izgube podatkov. Evidence o prijavah, tečajih in izpitih se vodijo ločeno, zato ni celovitega pregleda nad podatki. Za iskanje podatkov se porablja veliko časa, problem pri ročnih obdelavah je tudi zagotavljanje ažurnosti podatkov.\nSkoraj vse transakcije procesa se vodijo na papirjih, ki so tudi nosilci informacij, le nekatere podatke po zaključenih tečajih se zajema v računalniški obliki. Računalniška rešitev pripravljena s programom Paradox ne rešuje problema v celoti, saj je nabor podatkov, ki se jih na ta način zajema, zelo skromen. Zbira se le podatke o terminu in vrsti tečaja, udeležencih tečaja ter podatke o prisotnosti. Vsi ostali podatki, ki so ravno tako pomembni za organizacijo tečajev, še vedno ostajajo na papirjih. To so podatki o prijavah, odjavah, predavateljih in prostih učilnicah.\nKer je Služba za informacijsko tehnologijo v skladu s svojo strategijo poslovanja dokončno prešla na Microsoftova orodja, smo se odločili za ukinitev Paradox-ove aplikacije, saj se je ni splačalo nadgraditi oz. so bile onemogočene vse možnosti za njeno delovanje. Odločili smo se, da izdelamo novo aplikacijo v Accessu, iz Paradox-ove aplikacije pa prenesemo obstoječe podatke. \n"], "12": ["3.2 Opis obstoječega stanja", "Tečaje delimo na osnovne ter dopolnilne. Osnovni tečaji trajajo različno dolgo od 1 (enega) pa do 4 (štiri) dni in sicer odvisno od tega, za katero nalogo se izvajajo. Dopolnilni tečaji se organizirajo občasno, na primer ob obsežnejših spremembah programske opreme in trajajo praviloma en dan.\nVsak uporabnik, ki se naj bi udeležil izobraževanja za uporabo obdelav MFERAC, mora izpolnjevati naslednje pogoje:  1. pozna poslovno področje (pravne podlage, procese in dokumente),  2. zna delati z računalnikom pod operacijskim sistemom Windows,  3. ima v času izobraževanja (ali takoj po izobraževanju) možnost utrjevati znanje z  opremo na svojem delovnem mestu, kajti le v tem primeru je izobraževanje  smotrno (ob ne utrjevanju znanja, v štirinajstih dneh uporabnik pozabi vse postopke  dela)  4. ima splošno znanje o projektu MFERAC (ki ga uporabnikom posreduje koordinator  uporabnikov, npr.: okvirno jih seznani z vsebino zadnjega Poročila o stanju na  projektu MFERAC, ki ga je obravnaval Svet za področje informatike v državnih  organih).\nPostopki organiziranja tečaja: Koordinatorji uporabnikov1 pošljejo na posebnem obrazcu prijave za izobraževanje organizatorju izobraževanja.\nOrganizator izobraževanja glede na prispele prijave z izvajalcem uskladi razpored tečajev, določi kraje tečajev, razporedi tečajnike in o razporeditvi tečajnikov obvesti koordinatorje uporabnikov in izvajalca. V primeru izrednih tečajev lahko organizator izobraževanja pospeši postopek prijavljanja tako, da pošlje koordinatorjem uporabnikov predlog razporeditve. Koordinatorji uporabnikov seznanijo udeležence in poskrbijo za njihovo udeležbo. Organizator izobraževanja posreduje izvajalcu seznam udeležencev tečaja z obrazcem za ugotavljanje prisotnosti, anketo za udeležence tečaja, gradiva za tečajnike, gradiva za predavatelje. Organizator izobraževanja nadzira metodološki potek tečajev.\nIzvajalec po opravljenem tečaju dostavi organizatorju izobraževanja izpolnjene obrazce ankete, podpisni list in poročilo o izvedenem tečaju, ki ga potrdi organizator izobraževanja.\nEnkrat na leto organizator izobraževanja dostavi koordinatorjem uporabnikov poročilo o udeležbi na tečajih.\nOrganizator izobraževanja občasno izdaja potrdila o izobraževanju. Pogoj za izdajo potrdila je polna prisotnost na tečaju.\nKoordinator uporabnikov je pooblaščena oseba posameznega državnega organa (ministrstva, vladne službe ali druge skupine proračunskih uporabnikov), ki povezuje uporabnike tega organa s projektno skupino MFERAC. Preko njega poteka komunikacija med uporabniki in projektno skupino. Skrbi za nemoteno delo uporabnikov. \n"], "13": ["4 MODELIRANJE INFORMACIJSKEGA SISTEMA ZA PODPORO  IZOBRAŽEVANJA", ""], "14": ["4.1 Model procesov", "Na sliki 5 je predstavljen proces organiziranja in vodenja tečajev na najvišjem, nultem nivoju. Proces je povezan s tokovi podatkov z naslednjimi entitetami: organizator tečajev, izvajalec, koordinator, arhiv. Tokovi podatkov pa so: prijave/odjave na tečaje, vabila, obvestila koordinatorjem, seznam za vodenje prisotnosti na tečaju, anketni listi, poročilo o izvedenem tečaju, urnik, potrdila o opravljenem tečaju, dokumentacija.\nSestavni del strukturirane opredelitve informacijskega sistema je opis elementov, ki dopolnjuje shematski del modela. Najpomembnejša vloga opisa elementov je, da opredeli mesto, kjer najdemo opis vsakega tistega izraza, ki ga na diagramih ne razumemo.\nOpis entitet\nORGANIZATOR TEČAJEV Organizator tečajev je oseba, ki je odgovorna za celotno organizacijo tečajev. Zbira prijave in odjave, organizira tečaje, obvešča koordinatorje ter izvajalce o tečajih, sodeluje s koordinatorji in izvajalci pri usklajevanju terminov ter rešuje vprašanja v zvezi s tečaji. Imeti mora dostop do baze podatkov, ki omogoča celoten pregled stanja in hiter dostop do iskanih podatkov.\nKOORDINATOR Koordinator je pooblaščena oseba posameznega državnega organa (ministrstva, vladne službe ali druge skupine proračunskih uporabnikov), ki prijavlja in odjavlja kandidate tega organa na tečaje. Organizator tečajev na podlagi prejetih prijav pošilja koordinatorjem vabila na tečaje ter potrdila o opravljenih tečajih. Koordinator mora delavce obvestiti o tečajih ter jim razdeliti pridobljena potrdila.\nIZVAJALEC Izvajalec tečaja določi predavatelja. Predavatelji vodijo predavanja. Po zaključenem predavanju organizatorju tečaja posreduje podatke o udeležbi na tečaju, poročilo o izvedenem tečaju ter anketne liste.\nARHIV V arhivu se shranjuje vsa dokumentacija, ki je vezana na organizacijo tečajev- prijave, fotokopije odposlanih vabil, razna obvestila, anketni listi, seznami prisotnosti, mesečni izpisi ter letna statistična poročila.\nOpis tokov podatkov\nPRIJAVA Prijava je dokument, s katero koordinator prijavlja delavce na tečaje. Na prijavi morajo biti navedeni osebni podatki delavcev in vrsta tečaja na katero prijavljajo delavce. Pravilno je, da koordinator delavca v primeru zadržanosti odjavi od tečaja, s tem pa omogoči udeležbo drugemu.\nVABILA NA TEČAJ Vabila na tečaje se posreduje koordinatorjem, kot odgovor na prijave. Na vabilih je naveden termin tečaja, kraj izvajanja, seznam delavcev, ki so razporejeni na tečaj ter obseg (dni) trajanja tečaja. Fotokopije vabil se skupaj s pripadajočo prijavo hrani v arhivu. \nSEZNAM ZA VODENJE PRISOTNOSTI Seznam za vodenje prisotnosti je dokument, s katerim se vodi evidenca obiskov udeležencev. Na seznamu so navedeni podatki o tečaju, predavateljih tečaja ter kandidatih, ki so razporejeni na tečaj. Na začetku tečaja predavatelji preverijo pravilnost podatkov o kandidatih, da ne bi prihajalo do napak na dokumentih, ki se jih vodi v sklopu tečaja.\nANKETNI LIST Anketni list je obrazec, ki ga ob zaključku tečaja izpolnijo udeleženci. Na anketnem listu udeleženci tečaja ocenjujejo predavatelja, ustreznost računalniške opreme, dolžino trajanja tečaja, primernost podajanja snovi, motnje na računalniški opremi med samo izvedbo tečaja, prejeto gradivo. Na vsakem anketnem listu morajo biti izpolnjeni naslednji podatki: naziv tečaja, termin tečaja, ime in priimek predavatelja in morebitnega asistenta. Anketni listi služijo organizatorju tečaja kot povratna informacija o zadovoljstvu udeležencev na posameznih tečajih.\nPOTRDILO O OPRAVLJENEM TEČAJU Potrdilo o opravljenem izpitu prejmejo kandidati, ki so bili na tečaju prisotni vse dni trajanja tečaja. Potrdila organizator tečajev pošlje koordinatorjem, le-ti pa jih posredujejo kandidatom. Obrazec potrdila zajema naslednje podatke: naziv organizatorja tečaja, ime in priimek kandidata, organizacijo, kjer je zaposlen, število trajanja dni tečaja, naziv tečaja ter datum tečaja. Potrdilo mora biti datirano, podpiše pa ga organizator izobraževanja.\nURNIK Urnik je dokument s katerim se izvajalca tečaja obvešča o predavanjih ter vsebuje datum, uro in kraj izvedbe.\nDOKUMENTACIJA K dokumentaciji sodijo prijave, odjave, vabila, seznami za vodenje prisotnosti udeležencev, obvestila organizacijam, razni odgovori, anketni listi, statistični izpisi, poročila ter ostali dokumenti, ki se jih vodi v sklopu tečajev. Hranijo se v arhivu. \nRelacijski podatkovni model\nPreslikavo povezave 1:M ER modela v relacijski podatkovni model prikazuje slika 6. Pri preslikavi entitetnega modela v relacijski podatkovni model relacijo 'je zasedena' ne uvedemo kot samostojno tabelo, pač pa identifikator strani s kardinalnostjo 1 (UCI_ID) dodamo tabeli TERMINI. Morebitne atribute relacije prav tako dodamo v tabelo TERMINI.\nERmodel\nRelacijski model\nSlika 7 prikazuje preslikavo povezave M:M. V tem primeru moramo pri preslikavi entitetnega modela v relacijski kreirati relacijo PRIJAVE kot samostojno tabelo, pri tem dodamo identifikatorja obeh entitet. Na ta način dobi tabela PRIJAVE sestavljeni ključ. Ključ nove tabele je sestavljen iz glavnih ključev tabel, ki ju povezuje (TER_ID in DEL_ID). \nER model\nRelacijski model\nNa sliki 8 je prikazan relacijski podatkovni model za aplikacijo za organizacijo in vodenje tečajev izobraževanja. \n"], "15": ["4.2 Model podatkov", "Podatkovni model vsebuje naslednje tabele:\nODDELKI\nTabela oddelki vsebuje podatke o oddelkih (vladne službe, ministrstva, UE, sodišča,...). Podatki so: šifra oddelka, kratica oddelka, naziv oddelka, naslov oddelka, pošta ter kraj. Identifikator tabele je identifikacijska številka oddelka in je tipa autonumber.\nODDELEK (ODD_ID#, ODD_Sifra, ODD_Kratica, ODD_Naziv, ODD_Naslov,  ODD_Posta, ODD_Kraj, KOO_ID)\nDELAVCI\nTabela vsebuje osnovne podatke o delavcih: identifikacijsko številko, ki je hkrati tudi ključ tabele, priimek in ime kandidata ter funkcija, ki jo opravlja.\nDELAVCI (DEL_ID#, ODD_ID, ODD_Sifra, DEL_Priimek, DEL_Ime, DEL_Fun)\nTERMINI\nTabela termini vsebuje osnovne podatke o terminu tečaja: oznaka termina, omejitev števila udeležencev, datum ter in začetka termina ter trajanje termina v dnevih.\nTERMIN (TER_ID# , TEC_ID, TER_Mest, TER_Zacetek, UCI_ID, TER_Obseg,  Cena_ID, TER_Opomba)\nPREDAVATELJI\nOsnovni podatki o predavatelju so ime in priimek predavatelja.\nPREDAVATELJI (PRE_ID#, PRE_ImePriim, POD_ID)\nPRIJAVE\nTabela vsebuje podatke o udeležencih na tečajih. V tej tabeli se vodi evidenco o udeležbi na tečajih. V polje PRI_Prisoten se za vsakega udeleženca vpiše število dni, ko je bil prisoten na tečaju.\nPRIJAVE (TER_ID#, DEL_ID#, PRI_Prisoten, PRI_Komentar) \nOpis entitet, ki služijo kot šifranti\nKOORDINATORJI\nTabela koordinatorji je šifrant koordinatorjev.\nKOORDINATOR (KOO_ID#, KOO_Priimek, KOO_Ime, KOO_Telefaks,  KOO_Naslov, KOO_Posta, KOO_Kraj, KOO_Enaslov)\nTEČAJI\nTabela je šifrant tečajev, ki vsebuje naslednje podatke o tečajih: opis tečaja, obseg tečaja v dnevih, obseg tečaja v urah, dnevno število ur ter podatke tipa Yes/No, s katerimi označimo za katero nalogo je obravnavani tečaj.\nTEČAJI (TEC_ID#, TEC_Opis, TEC_Obseg_Dni, TEC_Obseg_Ur, TEC_Na_Dan, TEC_N1, TEC_N2, TEC_N4, TEC_N5, TEC_N6, TEC_N7, TEC_TIP)\nUČILNICE\nTabela je šifrant učilnic, kjer potekajo tečaji. Vsebuje osnovne podatke: naziv, zmogljivost, naslov, pošto ter kraj, številko sobe in nadstropje v katerem se nahaja, ter podatke o odgovorni osebi, ki upravlja z učilnico ter s katero se organizator tečajev dogovarja glede uporabe.\nUČILNICE (UCI_ID#, UCI_Opis, UCI_ Mest, UCI_Naslov, UCI_Posta, UCI_Kraj,  UCI_Soba, UCI_KonOseba, UCI_Kontelefon, UCI_KonFax)\nTIPI TEM\nTabela je šifrant tem (tečaj, posvet, delavnica, ...)\nTIPI TEM (TIP_Teme#)\nPODJETJA\nTabela je šifrant podjetij, ki izvajajo tečaje.\nPODJETJA (POD_ID#, POD_Naziv)\nCENA\nTabela je šifrant cen. (CENA_ID#, Cena) \nSlika 9 prikazuje tabele, ki so uporabljene pri modelu, slika 9 pa poizvedbe. Pri poizvedbah gre predvsem za poizvedbe iz ene ali več tabel po različnih kriterijih.\n"], "16": ["5 SKLEP", "Za današnji čas je značilen hiter tehnološki napredek in globalizacija poslovanja. Skoraj si ne moremo več predstavljati poslovanja brez računalnika. Računalnik je orodje, ki je organizaciji pomoč pri načrtovanju in nadziranju poslovanja ter pri sprejemanju odločitev. Z njim lahko skrajšamo operacije v poslovanju. Omogoča nam dober pregled nad informacijami in komunikacije. Računalnik brez ustrezne programske opreme je za uporabnika neuporaben. Informacijski sistemi so tisti, ki oskrbujejo organizacijo z informacijami, ki pomagajo razreševati probleme v zvezi s konkurenco, strankami, dobavitelji in drugimi entitetami v dinamičnem in spreminjajočem se okolju.\nPredstavljena programska rešitev, ki bo avtomatizirala sedanji proces organizacije tečajev za uporabnike sistema MFERAC, je izdelana za Službo za informacijsko tehnologijo Ministrstva za finance.\nUporabljen podatkovni model v praksi deluje pravilno in omogoča uporabniku hiter dostop do podatkov, ki ga v danem trenutku zanimajo in so osnova za učinkovito sprejemanje odločitev. Model je osnova za bazo podatkov, ki je ob dobri zasnovi ni težko širiti, če bi se v prihodnosti pokazale potrebe po dodatnih podatkih.\nProgramska rešitev je bila razvita ob sodelovanju uporabnika. Z njihovimi vprašanji, kritikami in željami so pomembno vplivali na sam potek izdelave rešitve, kakor tudi na izgled.\nVelik poudarek pri razvoju rešitve je bil, poleg izgradnje podatkovnega modela, namenjen oblikovanju uporabniškega vmesnika. Oblikovanje vmesnika je zahtevalo precej časa, vendar so bili doseženi pozitivni rezultati. Programska rešitev je za uporabnika prijazna, kar pomeni, da jo je enostavno uporabljati in ne zahteva dolgotrajnega učenja. Izdelana delujoča aplikacija zagotavlja točnost podatkov, poenostavi vodenje evidenc, ki postane bolj natančno, z manj napakami in bolj ažurno, omogoča prihranek na času, hitro iskanje podatkov, kronološko vodenje podatkov in avtomatiziran izpis potrebnih dokumentov.\nRačunalniška rešitev prinaša številne prednosti v poslovanje, s poudarkom na manjših stroških poslovanja in na kakovostnejšem poslovanju. V celoti naj bi avtomatizirala opravila in naloge organiziranja tečajev. Od informacijskega sistema pričakujemo tudi hitrejše ažuriranje podatkov, urejenost in dostopnost podatkov in vsesplošne izboljšave, glede na prejšnje stanje ter zadovoljstvo uporabnika sistema. V načrtu je tudi priprava uporabniškega priročnika.\n"], "abstract": ["V diplomski nalogi obravnavamo modeliranje informacijskega sistema za podporo izobraževanja, ki se odvija na Ministrstvu za finance. Predstavljen je model procesa organiziranja in vodenja tečajev, ki je bil osnova za izgradnjo aplikacije. Razvit je podatkovni model. "]}