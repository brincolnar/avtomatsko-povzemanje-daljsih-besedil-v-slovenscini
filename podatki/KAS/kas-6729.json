{"1": ["1. UVOD", "Osciloskop je temeljni merilnik v elektrotehniki. Uporablja se pri razvoju, vzdrževanju in popravilu elektronskih naprav in vezij. Omogoča nam prikazovanje odvisnost napetosti od časa. Digitalna tehnologija nam pri osciloskopih omogoča zelo natančno opazovanje signalov. Z uporabo spominskih modulov nam omogoča opazovanje signala pred proženjem, opazovanje enkratnih, zelo hitrih pojavov, opazovanje zelo dolgih pojavov, možnost enkratnega proženja ter nato neomejeno dolg prikaz na prikazovalniku. Ker je osciloskop postal klasični programirjiv digitalni sistem, omogoča še marsikatero drugo namensko uporabo.  Na tržišču je to področje dodobra razdelano, vendar so zaradi zelo visokih cen, te naprave precej nedostopne. Osnovna naloga nam bo izdelati majhen, prenosni, cenovno dostopni digitalni osciloskop, ki nam bo zagotavljal dovolj dobre rezultate pri nezahtevni uporabi tja do frekvence 500kHz. Tak frekvenčni razpon nam omogoča opazovanje celotnega tonskega področja ter signalov s področja zabavne elektronike.\n"], "2": ["1.1 Zgradba digitalnega osciloskopa", "Osnovno zgradbo digitalnega oscilockopa prikazuje blokovna shema na sliki (sl. 1.1). Vsebuje vhodni atenuator, s katerim poleg vhodne zaščite priredimo signal vertikalnemu ojačevalniku. Z vertikalnim ojačevalnikom nastavljamo napetostna območja, obenem pa nam ne sme spremeniti oblike signala. Signal se nato vodi do analogno digitalnega pretvornika, kateri pretvori analogno napetost v digitalni zapis. Analogno digitalni pretvorniki so običajno 8-bitni.  Za pravilno proženje signala je potrebno prožilno vezje, ki proži začetek vzorčenja v vedno enakem trenutku. S časovno bazo nastavljamo frekvenco vzorčenja in s tem časovna območja. Vzorce shranjujemo v pomnilnik, katere nato obdelamo in prikažemo na prikazovalniku. \n"], "3": ["1.2 Metode vzorčenja", "Frekvenčno območje digitalnih osciloskopov je odvisno od metode vzorčenja. Poznamo dve metodi: realno-časovno ter ekvivalentno-časovno metodo vzorčenja.  Realno-časovna metoda vzorčenja je primerna za opazovanje signalov pri enkratnem proženju. Signal vzorčimo, zaporedno vzorce shranimo v pomnilnik, ter jih nato prikažemo na prikazovalnik. Kot v [3] je frekvenčno območje omejeno na 1/2.5 frekvence vzorčenja. Rekonstrukcijo signala z uporabo realno-časovne metode vzorčenja prikazuje slika (sl. 1.2).\nEkvivalentno-časovna metoda vzorčenja je primerna za opazovanje periodičnih signalov. S to metodo shranjujemo vzorec za vzorcem v spomin v odvisnosti od prožilnega vezja, ter po rekonstrukciji z mikroporcesorjem, prikažemo signal na prikazovalniku. Pri \ntej metodi je možno opazovati signale višjih frekvenc, kot pri metodi realno-časovnega vzorčenja. \n Rekonstrukcijo signala z uporabo ekvivalentno-časovne metode vzorčenja prikazuje slika (sl. 3.1).\nEkvivalentno-časovno metodo vzorčenja delimo na sekvenčno vzorčenje in naključno vzorčenje. Pri sekvenčnem vzorčenju so vzorci oddaljeni za točno določen čas, pri čemer jemljemo za referenco, točko prožilnega vezja. Pri metodi naključnega vzorčenja, signal vzorčimo naključno. Pri tej metodi je potrebno vedeti točen čas oddaljenosti vzorca od referenčne točke, ki je običajno točka prožilnega vezja. Nato se s pomočjo teh časov, ponovno rekonstruira signal in prikaže na prikazovalniku.  Če se poslužujemo metode realno-časovnega vzorčenja, nam je frekvenčni spekter opazovanega signala omejen. Najvišja, pravilno opazovana frekvenca je lahko polovica vzorčne frekvence. Polovično vrednost vzorčne frekvnce imenujemo Nyquistova frekvenca. Če je opazovana frekvneca višja od Nyquistove frekvence, se nam na prikazovalniku pojavi signal nižje frekvence kot je v resnici. Dobimo popačenja v obliki prekrivanja spektra. \n Pri opazovanju signalov pod Nyquistovo frekvenco, dobimo že več kot dva vzorca na periodo. Če direktno prikažemo vzorce na prikazovalnik, dobimo zelo nepregledno sliko. \n Temu načinu prikaza pravimo točkast prikaz. Da se izognemo nepregledni sliki, se poslužujemo interpolacije. Osnovni sta dve interpolaciji in sicer, linearna interpolacija in sinusna interpolacija. Pri linearni interpolaciji sta zaporedna vzorca povezana med seboj z ravno linijo. Rekonstrukcijo signala z linearno interpolacijo prikazuje slika (sl. 4.1)\nPri sinusni interpolaciji pa sta zaporedna vzorca med seboj povezana s funkcijo sinx/x. Rekonstrukcijo signala s sinusno interpolacijo prikazuje slika (sl. 1.5).\nGlede na način prikaza vzorcev na prikazovalnik in uporabo različne vrste interpolacij, ločimo tri načine rekonstrukcije signala in s tem tri zgornje frekvenčne meje opazovanega signala:\n- točkast prikaz: 1/25 frekvence vzorčenja\n- linearna interpolacija: 1/10 frekvence vzorčenja\n- sinusna interpolacija: 1/2.5 frekvence vzorčenja\n"], "4": ["1.3 Vrste prikazovalnikov", "Najpomembnejši del klasičnega osciloskopa je katodna cev, s katerim generiramo elektronski curek, ki ga lahko vertikalno in horizontalno odklanjamo. Sled, ki jo tako opisuje žarek po zaslonu, postane vidna zato, ker je zaslon prevlečen s snovjo, ki oddaja svetlobo, če jo obstreljujemo z elektroni. Ostali sklopi v osciloskopu so namenjeni napajanju katodne cevi, odklanjanju žarka v obeh smereh in sinhronizaciji slike.  V elektroniki poznamo poleg običanjih periodičnih signalov tudi signale, ki se pojavljajo le ob posebnih pogojih ali povsem naključno. Za opazovanje takih signalov, uporabljamo pomnilne osciloskope, ki pa so primerni tudi za opazovanje signalov s periodo, daljšo od perzistence običajnega osciloskopa. Bistvo pomnilnih osciloskopov je v tem, da lahko ohranijo zapis na zaslonu daljši čas in sicer od nekaj sekund do več ur.  Klasični osciloskop na zaslonu uporablja svetlečo plast, ki ima perzistenco nekaj ms. Slika na zaslonu po tem času zbledi. Če imamo znan periodični signal nizke frekvence, lahko uporabimo snov z dolgo perzistenco. Za potrebe pomnilnih osciloskopov uporabljamo pomnilno katodno cev, ki deluje po načelu sekundarne emisije.  Pomnilni osciloskop z bistabilno katodno cevjo se od običajne katodne cevi razlikuje v zgradbi zaslona in v tem, da ima poleg osnovnega elektronskega topa, še dva pomožna elektronska topova, ki sta izvor počasnih elektronov. Snop elektronov iz pomožnih topov je s pomočjo razpršilne mrežice, tako razpršen, da pada enakomerno po celi površini zaslona.  Poznamo še osciloskop, ki ima pomnilno katodno cev s spremenljivo persistenco. Razlikuje se zlasti v tem, da je njen zaslon, enak zaslonu navadnega osciloskopa. Pomnilni sloj je na mrežici, nekaj milimetrov pred zaslonom. Podobno kot bistabilna katodna cev, ima tudi ta dva pomožna topa z enako vlogo in delovanjem, le da je med pomnilno mrežico in kolektorjem močno električno polje, ki daje vsakemu elektronu, ki pride skozi mrežico, veliko energijo in s tem veliko svetlost točke, ki jo zadene. Nujno je, da je potencial mrežice v začetku zelo negativen, če hočemo imeti temen zaslon.  Danes osciloskopi uporabljajo prikazovalnike na tekoče kristale. Njihova velika prednost je majhna poraba prostora, enostavno krmiljenje ter lažji prikaz informacij.\n"], "5": ["2. ELEKTRIČNO VEZJE", "Blokovno shemo digitalnega osciloskopa prikazuje slika (sl. 1.2). Vhodni signal peljemo na vhodni selektor, s katerim določamo ali bomo signal peljali skozi kondenzator in s tem izločili enosmerno komponento signala ali ne. Nato signal peljemo na impedančni pretvornik, kjer zagotovimo, da ne obremenjujemo vhodnega merjenega signala. Na nastavitvi napetostnega območja, izbiramo željeno napetostno območje. S pomikom po Y-osi lahko kompenziramo ničelno napetost, oziroma pomikamo merjeni signal po Y-osi. Tako pripravljen signal, nato z anologno digitalnim pretvornikom, vzorčimo s 128 vzorci in vzorce shranimo v pomnilnik. Za vzorčenje in shranitev v vzorcev v pomnilnik, poskrbi avtomat za vzorčenje. Z nastavitvijo časovnega območja izbiramo vzorčevalno frekvenco in s tem časovno območje na digitalnem osciloskopu. S časovno bazo generiramo vzorčevalno frekvenco. Sestavljena je iz oscilatorja osnovne frekvence, katero nato delimo na večkratnike. S prožilnim vezjem nastavljamo trenutek proženja avtomata za vzorčenje.  Celotno dogajanje krmilimo z mikrokrmilnikom. Željena območja in nastavitve na osciloskopu pa nastavljamo s pomočjo štirih tipk.\n"], "6": ["2.1 Vhodni selektor", "Z vhodnim selektorjm izbiramo med DC in AC načinom delovanja osciloskopa. V DC načinu peljemo skozi ojačevalnike celoten vhodni signal, enosmerno in izmenično komponento. Taka izbira je primerna pri opazovanju enosmernih signalov in signalov z zelo nizko frekvenco. Prav tako je DC način primeren za opazovanje digitalnih signalov. Vhodni selektor je prikazan na sliki (sl. 2.2).  V AC načinu peljemo opazovani signal preko kondenzatorja in s tem mu izločimo enosmerno komponento opazovanega signala. Primerna je za opazovanje signalov z enosmerno komponento, ki je višja od izmenične, naprimer v ojačevalnikih in gladilnih členih napajalnikov.\n"], "7": ["2.2 Impedančni pretvornik", "Z impedančnim pretvornikom zagotovimo, da med merjenjem ne obremenimo vhodnega signala in hkrati ne spreminjamo nivojev signala. Impedančni pretvornik nam prikazuje slika (sl. 3.2).\nRvh Rizh\n u IZH  AU = =1 (3.1)  uVH\nImpedančni pretvornik ima v idealnem primeru ojačanje AU = 1, neskončno veliko vhodno uportnost RVH = ∞ in ničelno izhodno upornost RIZH = 0.\n"], "8": ["2.3 Nastavitev napetostnega območja", "Pomembnejši podatek osciloskopa je napetostno območje. Da bi lahko opazovali signale različnih amplitud je potrebno merjeni signal prirediti vhodnemu območju AD pretvornika. AD pretvornik, ki ga bomo uporabili je TDA8703. To je 8-bitni AD pretvornik kateri je namenjen za video in ostale aplikacije. Poganjamo ga lahko s frekvenco do 40MHz. Vsi digitalni vhodi in izhodi so TTL kompatibilni.  Napetostno območje smo definirali od 10mV na razdelek pa do 2V na razdelek.  Naš prikazovalnik ima ločljivost 160x128 pik. Za prikaz opazovanega signala smo namenili 128 pik po X-osi in 128 pik po Y-osi. Osi smo razdelili še na 8 razdelkov. Ker imamo po Y-osi 128 pik, kar lahko zapišemo s 7-bitnim binarnim številom, AD pretvornik pa je 8-bitni, smo za prikaz namenili samo 7 najpomembnejših bitov. Torej imamo 16 pik na razdelek.  Minimalna vhodna napetost AD pretvornika znaša 1,55V, ki na podatkovnem izhodu ustreza desetiški izhodni kodi 0, maksimalna vhodna napetost pa je 3,26V in ustreza desetiški izhodni kodi 255.  Izračunamo srednjo vrednost vhodne napetosti. Vhodno območje je torej od 1,55V do 3,26V, kar absolutno znaša 1,71V. Vhodno območje delimo z dva in prištejemo spodnji vhodni meji. To je prikazano v (3.2).\nU AD ( 255) − U AD ( 0 )  U AD (128) = + U AD ( 0) = (3.2)  U AD (128) = + 1,55V = 2,405V \n kjer je: U AD (128) - srednja vhodna napetost v AD pretvornik\nU AD ( 255) - zgornja meja vhodne napetosti v AD pfretvornik\nU AD ( 0) - spodnja meja vhodne napetosti v AD pretvornik\nY-os prikazovalnika razdelimo na 8 razdelkov. Za vsako napetostno območje je potrebno izračunati ojačanje. Slika (sl. 4.2) prikazuje celotno ojačevalno vezje za nastavitev napetostnega območja ter vezje za izbiro željenega območja s pomočjo binarne kode V_SEL_0 do V_SEL_1.\n Območje 2V na razdelek:  Izračunamo maksimalno vhodno napetost tega območja U MAX , ki smo jo lahko še prikazovali:\nU MAX = U OBM ⋅ št.razd . = 2V ⋅ 8 = 16V (3.3)\nkjer je: U OBM - izbrano napetostno območje\nšt.razd . - število razdelokov na Y-osi\nOjačanje, ki je potrebno, da dobimo vhodno napetost v AD pretvornik v mejah dovoljene, pri maksimalni vhodni napetosti območja 16V/razd., dobimo iz (3.4).\nU AD ( IN ) 1,71V  AU = = = 0,1068 (3.4)  U MAX 16V\nkjer je: U AD ( IN ) - maksimalna amplituda vhodne napetosti v AD pretvornik\nU MAX - maksimalna vhodna napetost v osciloskop pri izbranem območju\nOjačanje invertirajoče ojačevalne stopnje, za območje 2V na razdelek iz slike (sl. 4.2), izračunamo po (3.5):  R9  A=− (3.5)  R1  Iz (3.5) izračunamo vrednost upora R9 po (3.6). Vrednost uporov smo izbirali iz lestvice E12 z 10% odstopanjem. Da smo se kar najbolj približali izračunani vrednosti, smo vezali največ dva upora zaporedno.  R9 = A ⋅ R1 = 0,1068 ⋅ 1000Ω = 106,8Ω (3.6)  Zaporedno vežemo upora 100 Ω in 6,8 Ω . Skupna vrednost uporov je 106,8 Ω .  Enako naredimo še za ostala napetostna območja: \nObmočje 1V na razdelek:  U MAX = U OBM ⋅ št.razd . = 1V ⋅ 8 = 8V (3.7)\nU AD ( IN ) 1,71V  AU = = = 0,2137 (3.8)  U MAX 8V\nR8 = A ⋅ R1 = 0,2137 ⋅ 1000Ω = 213,7Ω (3.9) Zaporedno vežemo upora 180 Ω in 33 Ω . Skupna vrednost uporov je 213 Ω .\nObmočje 500mV na razdelek:  U MAX = U OBM ⋅ št.razd . = 0,5V ⋅ 8 = 4V (3.10)\nU AD ( IN ) 1,71V  AU = = = 0,4275 (3.11)  U MAX 4V\nR7 = A ⋅ R1 = 0,4275 ⋅ 1000Ω = 427,5Ω (3.12) Zaporedno vežemo upora 390 Ω in 33 Ω . Skupna vrednost uporov je 423 Ω .\nObmočje 200mV na razdelek:  U MAX = U OBM ⋅ št.razd . = 0,2V ⋅ 8 = 1,6V (3.13)\nR6 = A ⋅ R1 = 1,068 ⋅ 1000Ω = 1,068kΩ (3.15) Zaporedno vežemo upora 1k Ω in 68 Ω . Skupna vrednost uporov je 1068 Ω .\nObmočje 100mV na razdelek:  U MAX = U OBM ⋅ št.razd . = 0,1V ⋅ 8 = 0,8V (3.16)\nR 20 = A ⋅ R1 = 2,3175 ⋅ 1000Ω = 2,137kΩ (3.18) Zaporedno vežemo upora 1k8 Ω in 330 Ω . Skupna vrednost uporov je 2130 Ω . \nObmočje 50mV na razdelek:  U MAX = U OBM ⋅ št.razd . = 0,05V ⋅ 8 = 0,4V (3.19)\nU AD ( IN ) 1,71V  AU = = = 4,275 (3.20)  U MAX 0,4V\nR 21 = A ⋅ R1 = 4,275 ⋅ 1000Ω = 4,275kΩ (3.21) Zaporedno vežemo upora 3k9 Ω in 330 Ω . Skupna vrednost uporov je 4230 Ω .\nObmočje 20mV na razdelek:  U MAX = U OBM ⋅ št.razd . = 0,02V ⋅ 8 = 0,16V (3.22)\nU AD ( IN ) 1,71V  AU = = = 10,68 (3.23)  U MAX 0,16V\nR 22 = A ⋅ R1 = 10,68 ⋅ 1000Ω = 10,68kΩ (3.24) Zaporedno vežemo upora 10k Ω in 680 Ω . Skupna vrednost uporov je 10k68 Ω .\nObmočje 10mV na razdelek:  U MAX = U OBM ⋅ št.razd . = 0,01V ⋅ 8 = 0,08V (3.25)\nR 23 = A ⋅ R1 = 21,375 ⋅ 1000Ω = 21,375kΩ (3.27)  Zaporedno vežemo upora 18k Ω in 3k3 Ω . Skupna vrednost uporov je 21k3 Ω .  Zaradi lepšega pregleda rezultatov, strnemo vrednosti uporov v tabelo 1. Upor Rx v tabeli pomeni, enega izmed izračunanih uporov za posamezno napetostno območje. \n"], "9": ["2.4 Pomik po Y-osi", "Funkcija pomik po Y-osi je primerna za odpravljanje težav z ničelnim odstopanjem ter za lažje odčitavanje signala s prikazovalnika. Omogoča nam vertiakalni pomik signala na prikazovalniku.  Za pravilno delovanje AD pretvornika je potrebno zagotoviti enosmerno napetost, na katero bomo prištevali merjeni signal. To pa zato, ker AD pretvornik nima vhodnega območja okoli ničle, ampak je to območje od 1,55V do 3,26V. Enosmerna napetost, ki jo moramo zagotoviti, je srednja vrednost vhodne napetosti U AD (128 ) , in kot smo jo že\nizračunali v (3.2), znaša 2,405V.  Pomik po Y-osi smo izvedli s spreminjanjem enosmerne napetosti U AD (128 ) v območju\nod 1,55V do 3,26V. Vezje, ki to omogoča je seštevalnik z operacijskim ojačevalnikom in je prikazano na sliki (sl.5.2). \n"], "10": ["2.5 Časovna baza in nastavitev časovnega območja", "Digitalni osciloskop je namenjen za opazovanje signalov različnih frekvenc. Za bolj optimalni prikaz ene periode opazovanega signala, je potrebno izbrati primerno frekvenco vzorčenja. S frekvenco vzorčenja določimo, s kolikšnimi vzorci zajamemo eno periodo opazovanega signala.  Kot smo že omenili, smo za prikaz časa na prikazovalniku namenili 128 pik. Vsak vzorec na prikazovalniku pomeni pomik v desno za eno piko po X-osi. Kar pomeni, da bomo za prikaz ene slike porabili čas, ki je enak 128-kratniku frekvence vzorčenja. Če še razdelimo časovno os na 8 razdelkov, je čas enega razdelka enak eni šestnajstini vzorčevalne frekvence. Da dobimo za časovna območja cela števila, izberemo frekvenco oscilatorja tako, da je enaka večratniku števila 16.  Glede na preklopne čase in prenosne karateristike razpoložljivih komponent, za oscilator določimo frekvenco 16MHz. Iz te osnovne frekvence bomo nato generirali ostale vzorčevalne frekvence. Generiranje ostalih frekvenc in izbiro le ene od teh prikazuje slika (sl. 6.2). \nFrekvenco iz oscilatorja razdelimo na 7 nižjih vrekvenc s števcema 74HC390 in dobimo naslednje vzorčevalne frekvence: 8MHz, 1,6 MHz, 800kHz, 160kHz, 80kHz, 16kHz in 1,6kHz.  Za izbiro frekvenčnega območja uporabimo 8-vhodni multiplekser 74HC151. Na vhode mu peljemo vzorčevalne frekvence ter signale za izbiro vhoda, izhod pa na avtomat za vzorčenje. 74HC151 ima tudi negiran omogočitveni vhod, ki ga fiksno vežemo na nizek potencial.  Izhod izbiramo s pomočjo 3-bitne kode. S 3-bitno kodo izberemo, katero izmed osmih vhodnih frekvenc bomo imeli na izhodu. Signale za izbiro vhoda pripeljemo iz mikrokrmilnika. Tabela 2 prikazuje izbiro frekvence vzorčenja glede na 3-bitno vhodno kodo. \n"], "11": ["2.6 Prožilno vezje", "Pri osciloskopu je potrebno zagotoviti, da začnemo vzorčevati signal v enaki točki vsake periode. Le tako bomo dobili mirujočo sliko na prikazovalniku. Zato je potrebno vezje, ki nam bo dalo znak, ko bo merjeni signal šel skozi željeno točko. Vezje, ki nam to omogoča prikazuje slika (sl. 7.2). \nV samem vezju je uporabljen komparator LM319. To je dvojni precizijski komparator za sorazmerno visoke hitrosti. Njegov odzivni čas je do 80ns pri napajanju ±15V, kar ustreza frekvenci tja do 12MHz. Ima zelo široko območje napajanja od ±5V pa do ±15V. Izhod ima plavajoči kolektor, zato potrebuje zunanji upor, ki ga bo ob aktivnem izhodu povlekel na logično »1«.  Upora R41 in R42 na sliki (sl. 7.2) predstavljata napetostni delilnik s katerim lahko nastavljamo napetost od -5V do +5V. To napetost peljemo na enega izmed dveh neinvertirajočih vhodov v LM319. Ta napetost nam služi za nastavljane točke, pri kateri nam bo prožilno vezje prožilo. Na invertirajoči vhod LM319 pripeljemo merjeni signal, ki ga vzamemo na izhodu ojačevalne stopnje. To pa zato, da je proženje neodvisno od prištevanja enosmerne napetosti, ki služi za prednapetost AD pretvorniku in pomiku po Y- osi. Upor R46 služi za dvig izhodne napetosti na logično »1« ob aktivnem izhodu. Posebno pozornost smo namenili uporu R47, ki preprečuje prenihaj na izhodu komparatorja ob aktiviranju le tega. Prenihaj nam je povzročal vzorčenje signala ob nepravilnem času.  Vezje deluje tako, da ko se merjeni signal izenači z nastavljeno napetostjo napetostnega delilnika, postavi izhod na logično »1«. Ta signal pa bomo uporabili kot pogoj za začetek vzorčenja.\n"], "12": ["2.7 Avtomat za vzorčenje", "Problem pri vzorčenju z mikrokrmilnikom je ta, da je mikrokrmilnik prepočasen, za vzorčenja signalov visokih frekvenc. Poleg tega, ko bi vzorčevali signal, nebi mogli delati ničesar drugega. Veliko dela nam bi tudi vzela programska nastavitev časov med vzorci, za vsako časovno območje.  Ideja avtomata za vzorčenje je, da nam na ukaz generira signale za vzorčenje in signale za shranitev vzorcev v pomnilnik. Takšno vezje z logičnimi elementi je lahko bistveno hitrejše od mikrokrmilnika. Čas, ki bi bil potreben za vzorčenje, je sedaj razpoložljiv za opravljanje drugih nalog. Poleg tega je frekvenca vzorčenja odvisna samo od oscilatorja. Blokovno shemo avtomata za vzorčenje prikazuje slika (sl. 8.2).\nNa eno od vhodnih linij avtomata za vzorčenje pripeljemo frekvenco vzorčenja, CLOCK. To je dejanska frekvenca s katero vzorčimo merjeni signal. Na linijo TRIGGER je pripeljan signal iz prožilnega vezja. Na vhodno linijo START SAMPLE pripeljemo signal iz mikrokrmilnika. Kadar je signal START SAMPLE aktiven, upoštevamo signal prožilnega vezja TRIGGER in začnemo z vzorčenjem. Z aktivnim signalom OE omogočimo zunanje naslovne linije od A0 do A7, katere so vezane na naslovne linije pomnilnika. Kadar je vzorčenje končano, se aktivira izhod END SAMPLE, kateri je vezan na mikrokrmilnik in nazaj v notranjost avtomata za vzorčenje, ki ustavi vzorčenje. Slika (sl. 9.2) prikazuje dejansko vezje avtomaza za vzorčenje. \nPri višjih frekvencah se nam je pojavil problem reguliranja trenutka proženja. Linija TRIGGER je aktivna, kadar je vhodni, merjeni signal enak ali večji od nastavljene vrednosti proženja. Problem se je pojavil, kadar je postala linija START SAMPLE aktivna po postavitvi linije TRIGGER. Takrat se je vzorčenja začelo, kadar se je postavila linija START SAMPLE in ne linija TRIGER. Posledica tega je bila, da nismo mogli pravilno nastavljati trenutek proženja. Na prikazovalniku je bilo to videti, »poskakovanje« signala levo in desno. Pri nizkih vrekvencah ta problem ni bil tako izrazit, pri visokih pa smo lahko izgubili velik del signala.  Problem smo rešili tako, da avtomat za vzorčenje začne vzorčevati signal samo takrat, kadar se na vhodu pojavi prehod linije TRIGGER iz nizkega v visoko stanje, ob že aktivni liniji START SAMPLE. Vezje, ki nam to omogoča prikazuje slika (sl. 10.2). Linijo DC_TRIGGER uporabljamo za opazovanje enosmernih signalov. Tedaj neprestano prožimo, neglede na vhodni signal. \nLiniji /SD in D imamo vezane na pozitivni potencial, linijo /RD pa krmilimo z linijo START SAMPLE. Izhod TRIGGER1 se bo postavil samo ob prehodu iz nizkega v visokostanje in če je predhodno postavljena linija START SAMPLE. Delovanje RS-celice nam prikazuje taabela 3.\n"], "13": ["2.8 Statični pomnilnik 62256B in vpisovanje vzorcev", "Hitachi HM62256B je CMOS statični RAM. Ima 15 naslovnih linij, kar ustreza 32768 lokacij po 8 bitov. Po dostopnem času ga razvrščamo v več skupin od 45ns do 85ns. Pomnilnik, ki smo ga uporabili ima dostopni čas 70ns, kar pomeni, da lahko beremo in pišemo s frekvenco do 13MHz. Napajamo ga z enojno 5V napetostjo ter ima vse vhode in izhode TTL kompatibilne. Podatkovne linije lahko postavimo v visoko impedanco.  S pomnilnikom komuniciramo po 15-ih naslovnih, 8-ih podatkovnih ter 4-ih kontrolnih linijah. Slika (sl. 11.2) prikazuje priključne lilnije pomnilnika.\nMikrokrmilnik dela s frekvenco 6MHz., ker pa je naša najvišja frekvenca vzorčenja 8MHz, je potrebno narediti logiko, ki je sposobna sama vpisovati vrednosti vzorcev v pomnilnik. Problem smo rešili z enim trojnim, dvovhodnim, analognim multiplekserjem 74HC4053. Vezje ima tri analogne multiplekserje, vsak ima dva vhoda in en izhod. Z dodatnimi tremi vhodnimi linijami izbiramo, položaj vsakega mulitiplekserja. Z deaktiviranjem linije /ENABLE, postavimo vsa stikala v stanje visoke impedance.  Pri branju vrednosti vzorcev iz pomnilnika ni nobenih problemov, ker linije /CS, /OE in /WE enostavno krmilimo z mikrokrmilnikom. Pri pisanju vrednosti vzorcev v pomnilnik pa, se nam pojavi problem nezadostne hitrosti mikrokrmilnika. Rešimo ga tako, da postavimo linijo /RD fiksno na visok nivo, liniji /CS in /WE pa združimo skupaj in ju \npriklopimo na frekvenco vzorčenja. Preklop krmilimo s signalom /COUNTER_ENBLE. Vezje za vpis vzorcev v pomnilnik s frekvenco vzorčenja, prikazuje slika (sl. 12.2).\n"], "14": ["2.9 Mikrokrmilnik ATmega64", "Mikrokrmilnik Atmega64, proizvajalca ATMEL, ima 64K zlogov programabilnega Flash spomina. Njegova osnovna lastnost je RISC (Reduced Instruction Set Computer) arhitektura. To je majhen nabor visoko-optimiziranih inštrukcij. Za RISC arhitekturo je značilno, da se veliko število inštrukcij izvede v samo v eni periodi procesorjevega takta. Pri obravnavi inštrukcije se izvede več blokov hkrati, tako se doseže večja efektivnost izvedene inštrukcije. Za RISC arhitekturo je poleg omenjenega še značilno veliko število registrov, s katerimi se razbremeni delovni spomin. Nekatere osnovne značilnosti mikrokrmilnika ATmega64 so: \n - napajalna napetost od 4.5V do 5.5V\n- delovna frekvenca od 0Hz do 16MHz\n- 64K zlogov FLASH pomnilnika\n- 2K zlogov EEPROM pomnilnika\n- 4K zlogov SRAM pomnilnika\n- 53 programabilnih vhodno / izhodnih linij\n- dva 8-bitna časovnika / števca\n- dva 16-bitna časovnika / števca\n- 8-kanalni, 10-bitni AD pretvornik\n- analogni komparator\n- programirljivi »watchdog timer« z ločljivostjo 1 do 16 bitov\n- zunanje in notranje generiranje prekinitev\n- 53 programirljivih V/I linij\n- šest načinov spanja\n- JTAG vmesnik\nNa sliki (sl. 13.2), je prikazan mikrokrmilnik in linije, ki vodijo v ali iz mikrokmilnika. Nanj so priključene linije za krmiljenje prikazovalnika, naslovno-podatkovne linije AD0 – AD7, linije za nastavljanje napetostnega in časovnega območja, linije na katere so povezane tipke ter ostale linije potrebne za delovanje celotnega sistema. Linij TCK, TMS, TDO in TDI so potrebne za programiranje mikrokrmilnika. Nahaja v SMD ohišju. \n"], "15": ["2.10 Prikazovalnik na tekoče kristale", "Prikazovalnik na tekoče kristale z oznako EA P160-7KEL ima ločljivost 160x128 točk. Za komunikacijo ima vgrajen krmilnik T6963C s katerim komuniciramo preko 8-bitnega podatkovnega vodila ter nekaj kontrolnih linij. Opis priključkov na konektorju prikazovalnika, prikazuje tabela 4. Za napajanje logičnih vezij potrebuje pozitivno napajalno napetost +5V, za napajanje tekočih kristalov pa uporablja negativno napajalno napetost okoli -8V s katero tudi nastavljamo kontrast prikazovalnika. \n Krmilnik T6963C je narejen za krmiljenje malih in srednjih grafičnih prikazovalnikov na tekoče kristale. Poleg vgrajenega ROM-a s 128 znaki, lahko krmili zunanji pomnilnik do velikosti 64K zlogov, ki ga lahko uporabimo za shranjevanje teksta, video podatkov ali za shranjevanje lastno definiranih znakov. Na prikazovalniku lahko prikazujemo tekst, grafiko ter različne kombinacije obeh.\n"], "16": ["2.11 Tipke", "Za upravljanje z osciloskopom uporabljamo štiri tipke in sicer UP, DOWN, MENU ter POWER. Vezane so tako, da je ena stran tipk na masi, druga stran pa na enega od vhodov v mikrokrmilnik. V programu gledamo kdaj je na določenem vhodu nizek potencial, kar označuje, da je določena tipka stisnjena. S tipko MENU določamo katere nastavitve bomo nastavljali s tipkama UP in DOWN. S tipko POWER pa vklopimo oziroma izklopimo prikazovalnik, ter postavimo izvajanje programa na začetek.  Tipko POWER nismo nadomestili z enostavnim stikalom, ker mora biti ob vklopu negativna napetost za napajanje tekočih kristalov, aktivna po napetosti za napajanje logičnih vezij v prikazovalniku. Ob izklopu pa moramo negativno napetost izklopiti pred pozitivno napetostjo, v nasprotnem primeru krajšamo življensko dobo prikazovalnika na tekoče kristale. To krmiljene napetosti pa se da enostavno rešiti z mikrokrmilnikom, relejem in tipko. Rešitev tega problema prikazuje slika (sl. 14.2).\n"], "17": ["2.12 Napajalnik", "Napajalnik nam zagotavlja tri različne stabilizirane napetosti. Pozitivno in negativno napetost amplitude 5V uporabljamo za napajanje analognega in digitalnega vezja. Negativno napetost amplitude 8V pa uporabljamo za napajanje tekočih kristalov v prikazovalniku. Celotno shemo napajalnika prikazuje slika (sl. 15.2). \n"], "18": ["3. IZVAJANJE PROGRAMA", "Program je napisan v zbirnem jeziku. V zbirnem jeziku se uporabljajo dve skupini ukazov, izvedljive ukaze in smernice za zbirnik. Izvedljivi ukazi se neposredno preslikajo v mikroprocesorski ukaz v strojnem jeziku medtem, ko so smernice samo ukazi prevajalniku. Nekateri deli programa se večkrat izvajajo, zato so napisani v obliki podprogramov. Podprogrami se prav tako uporabljajo zaradi večje preglednosti programa.  Program smo začeli s pisanjem smernic za zbirnik, s katerimi nam je bilo omogočeno lažje pisanje in razumevanje programa. Definirali smo si spremenljivke ter rezervirali lokacije v pomnilniku zanje. Določili smo začetek sklada v katerega smo shranjevali spremenljivke ob izvajanju podprogramov. V inicializaciji vrat smo definirali vhodne in izhodne linije ter dvižne upore v vratih. Na koncu smo še inicializirali prikazovalnik na tekoče kristale ter izbrisali pomnilnik, namenjen za shranjevanje teksta in grafike. \n V inicializaciji prikazovalnika smo definirali osnovne parametre za komunikacijo ter parametre, ki določajo, kako smo na prikazovalnik prikazovali poslane podatke. Definirali smo naslednje parametre:\n- uporaba notranjega generatorja 128-ih znakov\n- določitev naslova začetka grafičnega pomnilnika. Uporabljeni prikazovalnik je  razdeljen na zgornjo in spodnjo polovico. Zato naslov za zgornjo polovico znaša  0x0200 HEX, ter nalsov za spodnjo polovico 0x8200 HEX\n- nastavitev grafičnega območja prikazovalnika na 20 zlogov na vrstico\n- določitev naslova začetka tekstovnega pomnilnika. In sicer zgornja polovica se  začne na naslovu 0x0000 HEX ter spodnja polovica na naslovu 0x8000 HEX\n- nastavitev tekstovnega območja prikazovalnika na 20 znakov na vrstico\n- nastavitev zamikalnega registra na 0.\n- prikazovanje grafike in teksta, ter izključitev prikazovanja kurzorja in utripanje le  tega\n- nastavitev oblike kurzorja na dve liniji\nPo zgoraj izvedenih rutinah, čakamo na pritisk tipke za vklop. Če je bila tipka pritisnjena izrišemo naslovno ter po dveh sekundah še delovno sliko. Delovna slika vsebuje mrežo, to je področje na katerem bomo izrisovali merjeni signal, ter začetne nastavitve območij. Začetna nastavitev napetostnega območja je 2V na razdelek, časovnega območja pa 10ms na razdelek. Na začetku še nastavimo vhodni selektor na DC delovanje, kar pomeni, da merjeni signal ne peljemo skozi kondenzator, ter določimo sinhronizirano proženje z vhodnim merjenim signalom. Celotno dogajanje pred izvajanjem glavnega programa prikazuje slika (sl. 1.3). \n"], "19": ["3.1 Glavni program", "Celotno dogajanje programa je koordinirano z glavnim programom. Glavni program neprestano kliče podprograme v točno določenem zaporedju in tako poskrbi, da se celotno dogajanje izvaja kot želimo. Osnovne naloge glavnega programa so klicanje podprogramov za pregledovanje tipk, vzorčevanje merjenega signala, izračunavanje naslovov ter prikaz vzorcev na prikazovalnik.  Po pregledu tipk, postavimo linijo za začetek vzorčenja. Nato opazujemo ali je avtomat za vzorčenje postavil linijo za konec vzorčenja. Če je, gremo v rutino za izračun naslovov ter prikaz vzorcev. V nasprotenm primeru se vrnemo z izvajanjem glavnega programa na začetek. Dogajanje v glavnem programu prikazuje slika (sl. 2.3). \nV glavnem programu se nam je dogajalo, da smo linijo za začetek vzorčenja postavili še preden je bilo to končano. To smo rešili programsko s postavitvijo bita, ki se zbriše ob izvajanju rutine za izračun naslovov in prikaz vzorcev na prikazovalniku. Ta problem se pojavi pri nizkih frekvencah vzorčenja, ko se vzorčenje ne konča pred ponovnim izvajanjem rutine za začetek vzorčenja.\n"], "20": ["3.2 Rutina za obravnavo tipk", "Eden od podprogramov, ki ga kliče glavni program je podprogram za pregledovanje tipk. S tem podprogramom ugotavljamo, ali je katera izmed tipk pritisnjena in če je, ugotavljamo katera tipka je to. Nato gremo v izvajanje podprograma za obravnavo pritisnjene tipke. Poenostavljeno rutino za obravnavo tipk prikazuje slika (sl. 3.3).  Izvajanje programa je zelo hitro. Zato se lahko zgodi, da se ob enem pritisku tipke, večkrat izvede obravnava te tipke. Zaradi tega smo v podprogramu za obravnavo tipk vnesli zaščito, ki preprečuje, da bi se to zgodilo. \n"], "21": ["3.3 Rutina za izračun naslovov in prikaz podatkov", "Zelo pomemben del programa predstavlja rutina za izračun naslovov, ki so potrebni za prikaz podatkov na prikazovalnik. Vzorec, ki smo ga preberali iz pomnilnika predstavlja vrednost na Y-osi prikazovalnika. Za pravilni prikaz vzorca na prikazovalniku, smo vsakemu vzorcu določili vrstico ter bit v zlogu, poslanega podatka.  Pred ponovnim vpisom podatkov je bilo potrebno predhodne izbrisati. To smo storili tako, da smo si naslove predhodnih podatkov shranjevali, ter na te naslove vpisovali segmente mreže. Če ne bi tako postopali, bi ob brisanju predhodnih podatkov, brisali tudi mrežo. Podrobnejši opis te rutine je prikazan na sliki (sl. 4.3). \n"], "22": ["4. REZULTATI MERITEV", "Pomembnejši podatek pri digitalnih osciloskopih je frekvenčna karakteristika in zgornja frekvenčna meja. Določili smo določili s pomočjo meritev. Izvedli smo jo pri normalni občutljivosti, ter pri najvišji občutljivosti, kjer je ojačanje vertikalnega ojačevalnika največje. Opazovali smo signal pravokotne oblike amplitude 0.9V ter 40mV. Frekvenco smo spreminjali od 100Hz pa do 5MHz, ter opazovali spremembo in obliko amplitude signala. Iz rezultatov meritev, ki jih prikazuje tabela 5, ter iz grafičnega prikaza meritev na slikah (sl. 1.4), (sl. 2.4) in (sl. 3.4) lahko vidimo, da se amplituda signala z višanjem frekvence do 0.5MHz ne spreminja.  Upadanje amplitude nastopi pri frekvencah nad 0.5MHz. Iz slike (sl. 3.4) smo določili zgornjo frekvenčno mejo analognega dela osciloskopa (-3dB) in znaša 1.6MHz. Vendar ta meja ne določa zgornjo frekvenčno mejo osciloskopa, ker smo omejeni z načinom rekonstrukcije signala. To mejo bi lahko uporabili za zgornjo frekvenčno mejo osciloskopa, če bi pri rekonstrukciji signala, uvedli eno izmed interpolacij.\nnapetosti 40mV\nPri veliki občutljivosti je vpliv motenj lahko resen problem. Izvori motenj so lahko generatorji ure in njihove izhodne linije, ki jih peljemo po vezju. Zato smo tem linijam, pri izdelavi vezja, namenili posebno pozornost. Prav tako pa je potrebno zaščititi dele vezja na katere lahko te motje vplivajo. To smo dobro storili tako, da na opazovanem signalu, pri največji občutljivosti, ni videti popačitev.\n"], "23": ["5. SKLEP", "Naloge in cilje, ki smo si jih zadali smo v celoti izpolnili. Z osciloskopom se lepo opazuje signale do frekvence 500kHz. Ravno tako se odlično opazuje signale nižjih amplitud, ker motnje ne vplivajo na merjeni signal.  Nadaljnje delo in razvoj bi bil zelo zanimiv, zato si poglejmo, kateri bi bili možni predlogi za nadaljnji razvoj:\n- Frekvenčno območje opazovanja signalov bi lahko enostavno razširili s programsko  uvedbo interpolacije. S sinusno interpolacijo bi lahko takoj razširili frekvenčno  območje do frekvence 1.6MHz. To je zgornja frekvenčan meja analognega dela  osciloskopa (-3dB). Vse kar bi bilo potrebno storiti je napisati del programa za  sinusno interpolacijo.\n- Za opazovanje signalov nekoliko višjih amplitud, bi bilo potrebno razširiti  napetostno območje. To bi storili z vezavo atenuatorja na vhodni del osciloskopa.\n- Zanimiva rešitev bi bila uvedba programskega prožilnega vezja. Opazovani signal  bi bilo potrebno vzorčiti za nekoliko daljši časovni interval od periode merjenega  signala. Programsko pa bi nato iskali prehod signala skozi ničlo. Pri prikazu signala  bi to ničlo imeli za referenco, medtem ko bi signal začeli prikazovti z vzorci  različno oddaljenimi od reference, odvisno od nastavitve nivoja proženja. Z uvedbo  takšnega načina proženja, bi prihranili nekoliko elementov, porabljenih za prožilno  vezje.\n- Prikazovalnik na tekoče kristale bi lahko izkoristili za bolšo analizo opazovanega  signala. Prikazovali bi lahko naprimer maksimalno ter minimalno vrednost signala,  periodo oziroma frekvenco signala ter ostale podatke. Zanimivo bi bilo prikazovati  napetost pri kateri se proži signal. To bi lahko izvedli z AD pretvornikom v  mikrokrmilniku. Potrebno bi bilo samo meriti enosmerno napetost, ki jo  uporabljamo za nastavitev nivoja proženja, ter jo prikazati.\n- Ena od zanimivih idej za nadaljnji razvoj je prikazovanje frekvenčnega spektra  opazovanega signala. Potrebno bi bilo računati hitro Fourierjevo transformacijo.\n"], "abstract": ["Diplomsko delo predstavlja načrtovanje in izgradnjo enokanalnega, prenosnega, digitalnega osciloskopa. Osnovne zahteve, ki smo si jih zadali so 8-bitna kvantizacija, zmožnost opazovanja frekvenčnih signalov do 0.5MHz, uporabo osnovnih funkcij standardnih oscilockopov ter majhna in kompaktna oblika. Delo smo si najprej razdelili na posamezne bloke in jih nato povezali v celoto. V končni fazi smo izvedli primerjavo meritev našega in komercialnega oscilockopa ter ugotavljali ali izpolnjuje zahteve, ki smo jih določili pred načrtovanjem. Nazadnje smo dodali možnosti za spremembe in izboljšave digitalnega osciloskopa."]}